WEBVTT

00:00:00.000 --> 00:00:12.600
Hey, good noon actually.

00:00:12.600 --> 00:00:17.080
So it's quarter past 12 time for my lecture.

00:00:17.080 --> 00:00:22.560
Today our topic is kinematics of mechanisms so we are diving deeper into principles and

00:00:22.560 --> 00:00:31.800
also the parameterization of mechanisms and also in kinematic calculations and design.

00:00:31.800 --> 00:00:37.480
Besides that I just wanted to ask you whether everything is going fine for you with the

00:00:37.480 --> 00:00:41.640
MDP tutorial concept.

00:00:41.640 --> 00:00:47.560
As far as I am informed we have quite some groups and they are also active which is a

00:00:47.560 --> 00:00:48.560
good sign.

00:00:49.320 --> 00:00:52.320
No questions on that or so?

00:00:52.320 --> 00:00:59.360
Okay then I'll just live with that situation having groups active is good.

00:00:59.360 --> 00:01:05.720
Okay then let's go into today's lecture or better into last week's repetition.

00:01:05.720 --> 00:01:08.680
So in German as usual, let's go.

00:01:08.680 --> 00:01:15.680
So we have discussed machine elements, mechanical components, have seen there are energy storage

00:01:15.680 --> 00:01:21.560
systems, their energy is provided by the power plant to the drive system.

00:01:21.560 --> 00:01:26.640
There is an energy converter that also changes the energy shape while the power plant first

00:01:26.640 --> 00:01:32.760
modulates how much energy goes in there and at the end comes the energy converter that

00:01:32.760 --> 00:01:37.440
doesn't change the type of energy anymore, that's what the converter does.

00:01:37.440 --> 00:01:42.000
So for example from electric to mechanical and here it stays mechanical and we then scale

00:01:42.000 --> 00:01:45.920
only the flow and the potential sizes.

00:01:45.920 --> 00:01:53.920
An example for such a converter are mechanical, so for a mechanical converter are gears like

00:01:53.920 --> 00:02:01.320
for example wheel gears of different types, they can simply represent a translation to

00:02:01.360 --> 00:02:05.360
scale, they can also change the direction, we can also translate from translatory to

00:02:05.360 --> 00:02:11.360
rotatoric, so many variants, we can also bridge distance when we have

00:02:11.360 --> 00:02:20.360
for example belts in the game and had here just stand that it's about scaling,

00:02:20.360 --> 00:02:29.360
we basically scale the flow and the potential size, that's the transformation and a little

00:02:29.400 --> 00:02:34.400
bit is in there, also the energy conductor, that would be here for example in the case

00:02:34.400 --> 00:02:38.400
also a second function of this belt drive, that of course the energy from one to the

00:02:38.400 --> 00:02:39.400
other point brings.

00:02:39.400 --> 00:02:44.400
These are two types of mechanical elements that we have seen, the third variant was

00:02:44.400 --> 00:02:49.400
then the couplings, which ensure that we can either switch from the outside or

00:02:49.400 --> 00:02:57.400
open and close the drive rods self-activated, for example in the bicycle or to

00:02:57.440 --> 00:03:03.440
to generate safety by the torque, if we can bring in a shift variable from the outside

00:03:03.440 --> 00:03:08.440
it has the advantage that we can use it in a mechatronic way, that we can somehow adapt

00:03:08.440 --> 00:03:15.440
and the fourth and last type of machine elements that we have looked at were the energy

00:03:15.440 --> 00:03:22.440
storage and we said here in comparison to the MCS lecture we go very clearly and deep

00:03:22.480 --> 00:03:27.480
in the mechanical energy storage, we look at how potential energy is stored in masses

00:03:27.480 --> 00:03:34.480
or in springs and how kinetic energy can be stored in momentum masses or momentum wheels.

00:03:35.480 --> 00:03:42.480
That's a brief overview of the last time and with this we are going over to the agenda

00:03:44.480 --> 00:03:47.480
and today's content in English as usual.

00:03:47.520 --> 00:03:55.520
So, we will start with some kinematic principles and after that we go more deeply into

00:03:55.520 --> 00:03:57.520
kinematic descriptions.

00:03:57.520 --> 00:04:02.520
So here we basically learn terminology, how to say things, how it's called, how it's

00:04:02.520 --> 00:04:10.520
represented, here we think about how we describe the kinematics of the whole system

00:04:10.520 --> 00:04:16.520
and then we start going into calculations to determine movement possibilities

00:04:16.560 --> 00:04:23.560
and see how we can also use that as a metric for design purposes and finally as usual

00:04:23.560 --> 00:04:26.560
we will summarize interactively.

00:04:26.560 --> 00:04:33.560
We record as usual and still you are invited to take part, I am happy about your contributions.

00:04:34.560 --> 00:04:39.560
Okay, so at first let us distinguish which kinds of mechanisms we can see.

00:04:39.600 --> 00:04:44.600
Something that might be quite known to you is serial kinematics.

00:04:45.600 --> 00:04:52.600
So if you see that here, this is an open kinematic chain, we have a base, we have joints and links,

00:04:52.600 --> 00:04:59.600
joint and link, joint and link and maybe also more of those, less, depends on whatever that is

00:04:59.600 --> 00:05:06.600
and then finally here that nice small line is what we call the end effector.

00:05:06.640 --> 00:05:10.640
So where we finally want to do something, this is why it's called that way.

00:05:11.640 --> 00:05:14.640
Who has an impression, what could that be?

00:05:16.640 --> 00:05:30.640
This serial kinematic chain, robotic arm, six, six degrees of freedom, here only three

00:05:30.680 --> 00:05:39.680
because we have one, two, three joints but we could have more and then it could be six or seven of robotic arm.

00:05:49.680 --> 00:05:53.680
So they need additional joints, so here if you assume these are just rotational joints

00:05:53.680 --> 00:05:57.680
it would be three dimensional or three degree of freedom is a better way of saying it.

00:05:57.720 --> 00:06:08.720
For sure what you can buy is often 60 or 70, even, six dof or seven dof but this here since it's planar looks like it is 3D.

00:06:09.720 --> 00:06:15.720
This one, just a picture, I mean a real robot could have more for sure in all directions.

00:06:16.720 --> 00:06:24.720
Okay, the other alternative that we can have is parallel robots like this one here with a closed kinematic chain.

00:06:24.760 --> 00:06:28.760
So from one basis we go to another basis, that's not happening here, right?

00:06:28.760 --> 00:06:30.760
We end up somewhere in free space let's say.

00:06:31.760 --> 00:06:39.760
And the mixture of both is hybrid where we have for example here two bases, a parallel mechanisms and a serial mechanism on top of this.

00:06:40.760 --> 00:06:42.760
This is open-closed combination.

00:06:43.760 --> 00:06:47.760
Finally if we know the methods for parallel and for serial we can also deal with the hybrid.

00:06:48.760 --> 00:06:53.760
Okay, so what that could be we will see later also.

00:06:54.760 --> 00:07:02.760
So we now have different kinds of joints that we could see.

00:07:03.760 --> 00:07:11.760
So what we have just seen in the picture was implying that these are rotational joints that are rotating in a plane, right?

00:07:12.760 --> 00:07:16.760
So that could be for example a cylindrical joint.

00:07:16.800 --> 00:07:28.800
So we have axis around which it rotates but that is here or that would be a rotational joint would be just in the plane.

00:07:29.800 --> 00:07:34.800
The cylindrical would go beyond already because here we can also move in that direction, the same for a screw.

00:07:35.800 --> 00:07:45.800
So what we draw is now in a 3D space representation, not just that circle before now a cylinder which is the R,

00:07:45.840 --> 00:07:50.840
which is the rotation but we add that box with the cross which is the T as the translation.

00:07:51.840 --> 00:07:56.840
So here we could translate and rotate at the same time we have two degrees of freedom.

00:07:57.840 --> 00:08:02.840
We could also go and have two of these rotational joints combined.

00:08:03.840 --> 00:08:05.840
This is what we call a universal joint also.

00:08:06.840 --> 00:08:11.840
Degrees of freedom two would be here marked as a circle with a cross.

00:08:11.880 --> 00:08:18.880
And those would be fulfilling for example if you have several of those you could then see a robot with several degrees of freedom for example.

00:08:19.880 --> 00:08:22.880
And a spherical joint would be another option.

00:08:23.880 --> 00:08:34.880
You have here a sphere in a spherical cup so to speak which gives you three rotational joints one after each other where you put an S next to the circle.

00:08:35.880 --> 00:08:37.880
Do you know where we have something like that?

00:08:41.880 --> 00:08:44.880
I think you already had human shoulder.

00:08:47.880 --> 00:08:48.880
The knee knot? No.

00:08:49.880 --> 00:08:52.880
If you do this with your knee you have a problem, you need a doctor.

00:08:54.880 --> 00:08:56.880
But the shoulder is right.

00:08:57.880 --> 00:09:07.880
The knee has basically, but that goes beyond the scope of the lecture, the knee has a rotational joint but with a linear component so it's more than just a rotation.

00:09:07.920 --> 00:09:12.920
But if you would turn it in the other directions I would not recommend this.

00:09:13.920 --> 00:09:14.920
For the shoulder it's fine.

00:09:15.920 --> 00:09:16.920
Good.

00:09:17.920 --> 00:09:19.920
Better to talk about it than to try it.

00:09:20.920 --> 00:09:22.920
Think first and then do.

00:09:23.920 --> 00:09:25.920
We can have other representations.

00:09:26.920 --> 00:09:34.920
So this here was from the, sorry I'm going in the wrong direction, this here was from the Linacic book that we take as one reference.

00:09:34.960 --> 00:09:38.960
This here is now the representation from our other reference, the Hatzfeldt and Kern book.

00:09:39.960 --> 00:09:46.960
You see here the R joint is just rotating, the P joint is just prismatic so translatory one direction.

00:09:47.960 --> 00:09:50.960
The H joint would be here what is a screw joint.

00:09:51.960 --> 00:09:57.960
The E joint is prismatic in screw direction let's say.

00:09:58.960 --> 00:10:01.960
Then here we have the C joint where also the X's are changed.

00:10:02.000 --> 00:10:10.000
S joint is again the three dimensional one and U joint is the universal one that we have seen before with two rotational ones one after each other.

00:10:11.000 --> 00:10:25.000
So these are typical approaches of how you can build joints and out of these joints you make serial or parallel chains and potentially robots.

00:10:25.040 --> 00:10:37.040
If you now take a look into positioning mechanisms defined by the International Federation of Robotics for industrial robots you find pictures like those here.

00:10:38.040 --> 00:10:41.040
So the first one that is shown here is a Cartesian manipulator.

00:10:42.040 --> 00:10:45.040
Cartesian space has three directions X, Z, Y and Z.

00:10:45.080 --> 00:10:55.080
For that we need three translational joints to move something within 3D space without orientation for sure.

00:10:56.080 --> 00:10:58.080
So that would be a Cartesian manipulator.

00:10:59.080 --> 00:11:07.080
It could be a TRT cylindrical manipulator that's T for translation, rotation around this axis and another translation.

00:11:07.120 --> 00:11:25.120
Here you have TRS SCARA manipulator that's quite a standard thing where you have the height being a variable and then two rotations after each other which can give you pick and place or help with pick and place in the plane for example.

00:11:26.120 --> 00:11:28.120
So this is why SCARA is used quite often.

00:11:28.160 --> 00:11:34.160
Then RRT spherical, RRR and so on.

00:11:35.160 --> 00:11:38.160
So basically this gives you the order in which the joints are placed.

00:11:39.160 --> 00:11:40.160
So here you have R, R and T.

00:11:41.160 --> 00:11:44.160
So from the base scene you have RRT spherical manipulator.

00:11:45.160 --> 00:11:57.160
And finally here a parallel manipulator, some kind of a tripod where in each of the legs you have a translational joint with which you can basically move the plate on the top.

00:11:58.160 --> 00:12:01.160
Through lengthening and shortening these legs.

00:12:02.160 --> 00:12:07.160
So these are different approaches that you can use.

00:12:08.160 --> 00:12:12.160
And actually before already I wanted to ask you what do you think is preferable?

00:12:13.160 --> 00:12:20.160
Do you rather go for a serial arrangement like in the five here or do you go for a parallel?

00:12:21.160 --> 00:12:22.160
What is better?

00:12:25.160 --> 00:12:26.160
Depends on the application.

00:12:26.200 --> 00:12:27.200
Why?

00:12:32.200 --> 00:12:33.200
For what parallel?

00:12:36.200 --> 00:12:39.200
Okay you build something like a flight simulator.

00:12:40.200 --> 00:12:41.200
Why?

00:12:42.200 --> 00:12:51.200
I mean you can use a giant robotic arm and connect your cell where the pilot is in to it.

00:12:52.200 --> 00:12:55.200
I actually know research groups that did it so why don't you use it?

00:12:56.200 --> 00:13:02.200
Okay this is most, you say it has more stability.

00:13:03.200 --> 00:13:05.200
You can make it more stiff let's say that way.

00:13:06.200 --> 00:13:09.200
And support more weight okay.

00:13:14.200 --> 00:13:17.200
Might be more precise, yeah could be.

00:13:26.200 --> 00:13:31.200
So this is orienting around one point you say and the other ones could be moving.

00:13:32.200 --> 00:13:36.200
I mean that's always a matter of what you want to simulate also right.

00:13:37.200 --> 00:13:40.200
For sure this one can also move right it could go like this.

00:13:41.200 --> 00:13:45.200
It has for sure defined range of motion.

00:13:46.200 --> 00:13:49.200
So it's always a matter of what you want to simulate also right.

00:13:50.200 --> 00:13:53.200
For sure this one can also move right it could go like this.

00:13:53.240 --> 00:13:59.240
It has for sure defined range or constraints in the range that it has right.

00:14:00.240 --> 00:14:05.240
So also this one could be stiff if you make it stiff enough right.

00:14:06.240 --> 00:14:09.240
So finally you are right it's application specific.

00:14:10.240 --> 00:14:13.240
That doesn't mean that one application can only be solved with one of those.

00:14:14.240 --> 00:14:16.240
The question is what is the best way to solve it right.

00:14:17.240 --> 00:14:18.240
And this is where we engineers come into play.

00:14:19.240 --> 00:14:21.240
We need to think about that and for that we need to know the solutions.

00:14:21.280 --> 00:14:23.280
So this here potentially stiffer.

00:14:24.280 --> 00:14:31.280
On the other hand this one here usually way easier to calculate because you don't have that loops right.

00:14:32.280 --> 00:14:34.280
So something that we will see later.

00:14:35.280 --> 00:14:36.280
But both has its applications.

00:14:37.280 --> 00:14:46.280
Okay so finally what we will be thinking about in the future is where is our body or not our body a body.

00:14:46.320 --> 00:14:51.320
Or something that we are manipulating with our mechanism where is it in space.

00:14:52.320 --> 00:14:54.320
No matter what it would be picking a piece of chalk.

00:14:55.320 --> 00:14:56.320
Is it here is it there is it somewhere.

00:14:57.320 --> 00:14:59.320
This is what we are interested in looking into.

00:15:00.320 --> 00:15:02.320
So for that we need to know how it is positioned.

00:15:03.320 --> 00:15:05.320
So here is this arbitrary body.

00:15:08.320 --> 00:15:14.320
My mechanics professor was always saying it's the it's a cut off a potato right.

00:15:16.320 --> 00:15:18.320
You could imagine this now you are in Germany for the internationals.

00:15:19.320 --> 00:15:21.320
We always calculate with potatoes.

00:15:24.320 --> 00:15:28.320
So this arbitrary potato thing has its own coordinate frame.

00:15:29.320 --> 00:15:34.320
And the world has a coordinate frame from which we start calculating actually.

00:15:35.320 --> 00:15:39.320
So this one is fixed this one is fixed to the to the potato or to the body.

00:15:39.360 --> 00:15:45.360
And finally we want to know how we describe this one in that reference frame.

00:15:46.360 --> 00:15:49.360
And for that we will talk about where what is the position.

00:15:50.360 --> 00:15:56.360
So this is basically the vector from the origin of the reference frame to the origin of the frame on the body.

00:15:57.360 --> 00:15:58.360
P.

00:15:59.360 --> 00:16:01.360
This is basically a coordinate.

00:16:02.360 --> 00:16:08.360
And then we are interested in the orientation you already mentioned that for the flight simulator orienting is pretty important likely.

00:16:09.360 --> 00:16:17.360
So here we would have some kind of rotation matrix to describe how does that dash is behaving or.

00:16:18.360 --> 00:16:19.360
How is it.

00:16:21.360 --> 00:16:28.360
Displaced compared to that say to the set and the way to the white dash here the X dash to the X and so on.

00:16:29.360 --> 00:16:31.360
For that we get a rotation matrix.

00:16:32.360 --> 00:16:35.360
For that we need to think of before we go on with that.

00:16:35.400 --> 00:16:39.400
Let's say we should think about how can we represent orientation.

00:16:40.400 --> 00:16:47.400
We will mainly use rotation matrices here but I would like to show you that there are other solutions because they are also used in robotics.

00:16:48.400 --> 00:16:55.400
So rotation matrix is the first one that we have just seen rotation matrices.

00:16:56.400 --> 00:17:00.400
Should be realized in a way that they are orthogonal.

00:17:00.440 --> 00:17:05.440
That means that their transpose is equal to their inverse.

00:17:06.440 --> 00:17:11.440
That also means that their transpose multiplied with themselves would be a unit matrix.

00:17:12.440 --> 00:17:19.440
And the nice thing about those and this is why we use them so often is we can do consecutive frame alignment.

00:17:20.440 --> 00:17:26.440
So we instead of calculating from the coordinate frame zero to the care.

00:17:26.480 --> 00:17:30.480
So from zero to the coordinate frame one from one to two and so on.

00:17:31.480 --> 00:17:34.480
What we would need to do for a robot from one joint to the next.

00:17:35.480 --> 00:17:45.480
We can or no before instead of going from the basis to the end effector we can basically go joint by joint.

00:17:46.480 --> 00:17:47.480
That's what I want to say.

00:17:48.480 --> 00:17:50.480
We are multiplying them to each other to get the overall transformation.

00:17:50.520 --> 00:17:51.520
Let's say I am a robot.

00:17:52.520 --> 00:17:54.520
I want to pick and place this piece of chalk.

00:17:55.520 --> 00:18:00.520
So instead of calculating from the basis this is fixed let's say.

00:18:01.520 --> 00:18:02.520
Screw my shoulder to the wall.

00:18:03.520 --> 00:18:04.520
Please don't.

00:18:05.520 --> 00:18:06.520
To here.

00:18:07.520 --> 00:18:10.520
So instead of getting it directly we are going from this joint to that joint to that joint here.

00:18:11.520 --> 00:18:15.520
And with that then the hand would be simplified to be the end effector which is stiff.

00:18:16.520 --> 00:18:18.520
For sure that can also move but that's another story.

00:18:18.560 --> 00:18:25.560
So for that we take the rotation matrices of each of the links basically and joint link combinations.

00:18:26.560 --> 00:18:30.560
And with that consecutive frame alignment we can work with the whole thing.

00:18:31.560 --> 00:18:33.560
Still this can also be quite complicated.

00:18:34.560 --> 00:18:36.560
Euler angles would be an alternative.

00:18:37.560 --> 00:18:41.560
The problem is here we have different three consecutive rotations.

00:18:42.560 --> 00:18:45.560
The problem is here that it depends on how you implement them.

00:18:45.600 --> 00:18:50.600
It can end up in a non-unique or will end up in a non-unique representation and might even lead to a singularity that you don't want.

00:18:51.600 --> 00:18:53.600
That degrees of freedom are locked.

00:18:54.600 --> 00:19:01.600
Angle axis would be one where you have a rotation angle around the axis and with the axis with the vector.

00:19:04.600 --> 00:19:11.600
And the most sophisticated one is maybe quaternions where you have a scalar and a vector part.

00:19:11.640 --> 00:19:14.640
This is a complex representation.

00:19:15.640 --> 00:19:20.640
The two ones down here have four parameters instead of three through that they are clearly unique also.

00:19:21.640 --> 00:19:26.640
But this is something that you usually don't do in classes but rather in advanced.

00:19:27.640 --> 00:19:34.640
So I have seen people doing this in thesis maybe meanwhile it's in some robotics courses but that is going a bit further.

00:19:35.640 --> 00:19:38.640
We will see how this works in the next class.

00:19:38.680 --> 00:19:41.680
We will stick mainly with the rotation matrices.

00:19:42.680 --> 00:19:55.680
So if we now want to do kinematic transformations then we need to find a homogeneous transformation matrix between the axis frame 0 and the axis frame 1.

00:19:56.680 --> 00:19:58.680
So that is what we are interested in.

00:19:59.680 --> 00:20:02.680
We want to come from the basis let's say to the next joint.

00:20:02.720 --> 00:20:07.720
And then when we can do this we can for sure do this several times to come to the end effector finally.

00:20:08.720 --> 00:20:11.720
So that would be as what we have seen before.

00:20:12.720 --> 00:20:17.720
Transformation matrix from zero basis to an end effector or tool could also be the tool.

00:20:19.720 --> 00:20:27.720
And this equals a consecutive frame alignment of homogeneous transformation matrices which basically means we multiply the two.

00:20:27.760 --> 00:20:28.760
How do they look like?

00:20:29.760 --> 00:20:30.760
They look roughly like this.

00:20:31.760 --> 00:20:36.760
So we have a rotation matrix three times three with trigonometric functions here.

00:20:37.760 --> 00:20:38.760
We have zeros there.

00:20:39.760 --> 00:20:44.760
We have the X Y Z coordinates here and we have a one here.

00:20:45.760 --> 00:20:52.760
So basically this part is representing the rotation and this part is representing the rotation.

00:20:52.800 --> 00:20:57.800
And nicely this is also found in software that you might use later.

00:20:58.800 --> 00:21:03.800
For example ROS the Robotics Operating System has the so called URDF files.

00:21:04.800 --> 00:21:07.800
It's just here as an example so that you get a feeling for it.

00:21:08.800 --> 00:21:11.800
So the Unified Robot Description Format is what they call it.

00:21:12.800 --> 00:21:15.800
And if you take a look into it here for example joint matrix.

00:21:15.840 --> 00:21:18.840
It is apparently between the base link and the shoulder link.

00:21:19.840 --> 00:21:22.840
And this here by the way we have that here in the name.

00:21:23.840 --> 00:21:27.840
The name of the links and joints then the relative position to the joint.

00:21:28.840 --> 00:21:31.840
Then here what is it rotating around?

00:21:32.840 --> 00:21:37.840
In this case the joint, the joint is the joint of the joint and the joint is the joint of the joint.

00:21:38.840 --> 00:21:39.840
So these are the two.

00:21:39.880 --> 00:21:44.880
So this is the joint and then here what is it rotating around?

00:21:45.880 --> 00:21:48.880
In this case Z axis is where this vector is zero zero one.

00:21:49.880 --> 00:21:50.880
And safety limits.

00:21:51.880 --> 00:21:56.880
So it should not go below minus two pi or above two pi.

00:21:57.880 --> 00:22:02.880
It should not be having efforts so that would likely be torques here because it's a rotation.

00:22:04.880 --> 00:22:08.880
This doesn't have units so something that is 330.

00:22:09.880 --> 00:22:12.880
Velocity also doesn't have unit 2.16 something.

00:22:13.880 --> 00:22:15.880
So radians per second or whatever.

00:22:16.880 --> 00:22:22.880
And then here you would also add for example damping friction parameters if it's there.

00:22:23.880 --> 00:22:32.880
So basically we see this is grasping what we have seen in the theory also here in a practical application.

00:22:32.880 --> 00:22:35.880
This is really something that you can use to program a robot.

00:22:35.920 --> 00:22:42.920
So ROS is what we for example use in the human robot interaction laboratory that's currently going on this winter semester.

00:22:43.920 --> 00:22:48.920
And you might want to take it in the future if you are interested to go deeper into this.

00:22:49.920 --> 00:22:51.920
Okay with that we come to parameters.

00:22:52.920 --> 00:22:59.920
So how do we describe our kinematic chains and how do we parameterize them?

00:22:59.960 --> 00:23:05.960
And one very common method in robotics is the Denna-Wiet-Hartenberg parameters.

00:23:06.960 --> 00:23:12.960
In many cases you will only read DH parameters as the short version of it.

00:23:13.960 --> 00:23:22.960
So that gives you basically the relations between the joints and by that representation of the structure of the robot and what it means kinematically.

00:23:23.000 --> 00:23:32.000
So we have four parameters here that describe the structure between two joints usually.

00:23:33.000 --> 00:23:40.000
So here D1 is the distance between axis xi minus 1 and xi.

00:23:41.000 --> 00:23:43.000
So we take the previous joint as the x axis here.

00:23:44.000 --> 00:23:46.000
The next joint has the x axis here.

00:23:46.040 --> 00:23:54.040
This is the projection of it dotted line here and the distance in between of those is what we will call di.

00:23:55.040 --> 00:24:05.040
Then theta i is the rotation between the links i and i minus 1 around z minus i minus 1.

00:24:06.040 --> 00:24:08.040
So z i minus 1 is here.

00:24:09.040 --> 00:24:11.040
This is also the direction of where we take a look at D by the way.

00:24:11.080 --> 00:24:14.080
And now we are looking at the angle of rotation around them.

00:24:15.080 --> 00:24:29.080
So that would be here the theta which is between the xi minus 1 and the x around z.

00:24:30.080 --> 00:24:32.080
So in the plane of x and y here.

00:24:32.120 --> 00:24:33.120
You see it.

00:24:34.120 --> 00:24:39.120
And then bi is the length of the link.

00:24:40.120 --> 00:24:45.120
So this is here between the z and the z axis here.

00:24:46.120 --> 00:24:48.120
And this one here is the helping line let's say.

00:24:49.120 --> 00:24:51.120
So this is basically the plane in which z and y are.

00:24:52.120 --> 00:24:53.120
We will see this later in more detail.

00:24:54.120 --> 00:25:00.120
And we have alpha which is the angle between z i minus 1 and z i.

00:25:00.160 --> 00:25:03.160
So here we have the z.

00:25:04.160 --> 00:25:05.160
There we have a z.

00:25:05.160 --> 00:25:08.160
You see it's a bit warped here or turned.

00:25:09.160 --> 00:25:11.160
So here we have the alpha.

00:25:12.160 --> 00:25:19.160
And those four numbers now go into matrices from which we build our A matrix.

00:25:20.160 --> 00:25:25.160
So our transformation matrix from the previous joint to the next joint.

00:25:25.200 --> 00:25:30.200
And for that it's important to know what is the variable here.

00:25:31.200 --> 00:25:34.200
So what can change is the D and the theta.

00:25:35.200 --> 00:25:38.200
So for example if it's prismatic joint then the D would change.

00:25:39.200 --> 00:25:42.200
If it's rotational then the theta would change.

00:25:43.200 --> 00:25:44.200
You see it here.

00:25:45.200 --> 00:25:46.200
By the way you also see it there right because it's in the plane.

00:25:47.200 --> 00:25:51.200
You can take these axes or these axes you see where the angle would be.

00:25:51.240 --> 00:25:52.240
Good.

00:25:53.240 --> 00:25:56.240
And the other two parameters B and alpha they are fixed.

00:25:57.240 --> 00:25:58.240
They are fixed why?

00:25:59.240 --> 00:26:03.240
Because they are just due to the geometry of the manipulator of the kinematic chain.

00:26:04.240 --> 00:26:06.240
So how could it look like then?

00:26:07.240 --> 00:26:09.240
Joint translation in D and rotation in theta.

00:26:10.240 --> 00:26:12.240
These are the potentially variable parts.

00:26:13.240 --> 00:26:15.240
They go into a matrix that we also call Q.

00:26:16.240 --> 00:26:18.240
We have the rotation around z here.

00:26:18.280 --> 00:26:24.280
We have the displacement in z between the axes in z direction here.

00:26:29.280 --> 00:26:35.280
And then we have here the representation of that static so to speak part.

00:26:36.280 --> 00:26:40.280
Because here the alpha and the B are fixed parameters.

00:26:41.280 --> 00:26:47.280
So B goes here into x direction and the rotation is now around z.

00:26:48.280 --> 00:26:51.280
The x axis.

00:26:52.280 --> 00:26:53.280
This is y here.

00:26:54.280 --> 00:26:56.280
We have the structure that the x has the one and not the z.

00:26:57.280 --> 00:26:59.280
Okay and those two we can bring together.

00:27:00.280 --> 00:27:05.280
And then if we multiply them with each other we will get the transformation of the whole thing.

00:27:06.280 --> 00:27:10.280
To give you a better feeling of how to align the frames and so on.

00:27:11.280 --> 00:27:13.280
We have a video that I would like to show you.

00:27:14.280 --> 00:27:15.280
I hope that the sound plays.

00:27:16.280 --> 00:27:17.280
Let's see whether that works.

00:27:18.280 --> 00:27:23.280
But for that it also needs to play and this doesn't work with the pointer for sure.

00:27:24.280 --> 00:27:26.280
So let's see.

00:27:37.280 --> 00:27:41.280
Let's go back once and see how I can get this to HDMI.

00:27:48.280 --> 00:27:50.280
Let's see whether that works.

00:27:53.280 --> 00:27:58.280
Instead of at Hahnberg parameters the light is to simply describe the motion of a series of rigid joints.

00:27:59.280 --> 00:28:03.280
This is useful for efficient calculation of forward and inverse kinematics.

00:28:04.280 --> 00:28:07.280
The process begins by defining the z axis.

00:28:08.280 --> 00:28:13.280
The z axis is the area of the frame that is the axis of the frame.

00:28:13.320 --> 00:28:15.320
And the z axis is the area of the kinematics.

00:28:16.320 --> 00:28:24.320
The process begins by defining the z axis along the axis of rotation for our volute joints or the axis of translation for prismatic joints.

00:28:25.320 --> 00:28:28.320
Since this is the first joint the x axis is a free choice.

00:28:29.320 --> 00:28:32.320
For later joints each x axis will point away from the previous joint.

00:28:33.320 --> 00:28:35.320
The y axis simply completes the right handed reference frame.

00:28:36.320 --> 00:28:39.320
Now if we add another joint we can determine the transformation between them.

00:28:39.360 --> 00:28:42.360
As before the z axis points along the axis of rotation.

00:28:43.360 --> 00:28:47.360
The dh parameters will be derived from the common normal between these z axes.

00:28:48.360 --> 00:28:54.360
The common normal is orthogonal to both vectors and is also the shortest line between them.

00:28:57.360 --> 00:29:03.360
The new x axis points along the common normal and has its origin at the intersection with the new z axis.

00:29:03.400 --> 00:29:10.400
Notice the origin is not within the physical actuator because the dh parameters are only concerned with the motion of the links, not the physical placement of components.

00:29:11.400 --> 00:29:15.400
Using this protocol for laying out the reference frames only four parameters are needed.

00:29:16.400 --> 00:29:24.400
The first of these, d, is the depth along the previous joint's z axis from the origin to the common normal.

00:29:24.440 --> 00:29:28.440
Theta rotates about the previous z axis to align the x axis.

00:29:32.440 --> 00:29:34.440
r is the length of the common normal itself.

00:29:35.440 --> 00:29:39.440
Most texts call this parameter a, which is unfortunately easy to confuse with alpha.

00:29:40.440 --> 00:29:45.440
Instead calling it r is a useful monomic as this is also the radius of revolution for the new origin about the previous z.

00:29:46.440 --> 00:29:51.440
The second of these is the length along the previous joint's z axis from the origin to the common normal.

00:29:51.480 --> 00:29:54.480
This is the radius of revolution for the new origin about the previous z.

00:29:59.480 --> 00:30:06.480
Finally, alpha rotates about the new x axis to bring z into alignment with the axis of joint motion.

00:30:12.480 --> 00:30:15.480
Now there's one special case when the z axes are parallel.

00:30:15.520 --> 00:30:22.520
Because parallel lines have an infinite number of common normals, you can choose any d value you like in order to place the new origin at a convenient location,

00:30:22.520 --> 00:30:26.520
such as the center of a link or the tip of an end effector.

00:30:30.520 --> 00:30:32.520
The other parameters are the same as before.

00:30:34.520 --> 00:30:37.520
Theta rotates about z to align the x axis with the normal.

00:30:39.520 --> 00:30:42.520
And r translates out along the normal to reach the new origin.

00:30:42.560 --> 00:30:49.560
Alpha is already known to be zero in this case, since the z axis must be parallel for this to apply, thus no rotation is needed.

00:30:52.560 --> 00:30:54.560
Okay, so...

00:30:59.560 --> 00:31:01.560
Working right?

00:31:02.560 --> 00:31:05.560
Now it's coming back? Yes? Okay, good.

00:31:06.560 --> 00:31:09.560
Great, maybe two audio sources at once makes the problem.

00:31:09.600 --> 00:31:14.600
Okay, so we have seen how that looks like. I think with the 3D animation it gets more tangible.

00:31:15.600 --> 00:31:20.600
We will also put the link to that video into the lecture slides so that you can watch it later on.

00:31:21.600 --> 00:31:25.600
Because I think that's quite helpful to really understand it well.

00:31:26.600 --> 00:31:38.600
You also see directly here, as it happens quite often, you will not have the same names for all the parameters and variables and so on.

00:31:39.600 --> 00:31:43.600
So here they are using r instead of b, they also explain why.

00:31:47.600 --> 00:31:51.600
But yeah, so that is something that you should always think about twice.

00:31:52.600 --> 00:31:57.600
Okay, so we have heard that already and that brings us now to our in-class exercise.

00:31:58.600 --> 00:32:03.600
In-class exercise for today is to take a look at the manipulator, I will zoom in because this is hard to read,

00:32:04.600 --> 00:32:08.600
and bring it into the Denner-Wiet-Hartenberg parameters.

00:32:09.600 --> 00:32:21.600
And what you will need to do is you need to fill the table with the theta, the d, the b and the alpha for the number of joints that we have here.

00:32:22.600 --> 00:32:24.600
I'm not going on one step because it shows me that you would see the solution.

00:32:25.600 --> 00:32:27.600
Usually we have here a solution in steps, but let's see.

00:32:28.600 --> 00:32:30.600
So first let me zoom in.

00:32:31.600 --> 00:32:34.600
So here you see the robot a bit bigger.

00:32:34.640 --> 00:32:38.640
We have a joint here, we have another joint there, we have one joint here and we have one joint there,

00:32:39.640 --> 00:32:41.640
this is why it's a 4x4 table that you need to fill.

00:32:42.640 --> 00:32:46.640
And it also tells you what kind of joints those are.

00:32:47.640 --> 00:32:55.640
You can also take a look at this one here which will give you the representation in the format that we have seen before.

00:32:56.640 --> 00:32:59.640
So I would leave one of those open for you so that you can see it well.

00:33:00.640 --> 00:33:01.640
I think this one might be better.

00:33:01.680 --> 00:33:04.680
And if you want to see the other, we can go back.

00:33:05.680 --> 00:33:07.680
Oh no, you actually need the other, I see.

00:33:08.680 --> 00:33:13.680
So let's maybe put it this way so we have most of it plus this one here and I can move later on.

00:33:14.680 --> 00:33:19.680
We have 1250, so your task is to set up the table, you basically see it here, right?

00:33:20.680 --> 00:33:24.680
So it would be those four columns and then I would be the number of joints.

00:33:25.680 --> 00:33:28.680
And then basically at 1255 we discuss the solution.

00:33:28.720 --> 00:33:35.720
Okay, that was two extra minutes already and let's maybe try to get to a solution.

00:33:36.720 --> 00:33:43.720
We might zoom in again, it's quite some, it's a bit too small maybe for the slide,

00:33:44.720 --> 00:33:48.720
but if you want to fit the table as well then maybe we can rearrange later.

00:33:49.720 --> 00:33:55.720
Good, so who has a suggestion for, the structure is clear already, it's four columns, four lines, right?

00:33:55.760 --> 00:33:58.760
Because we have four joints, what kind of joints do we have?

00:33:59.760 --> 00:34:00.760
Rotational?

00:34:02.760 --> 00:34:04.760
One is translational, which one?

00:34:05.760 --> 00:34:07.760
The third one of four, yeah?

00:34:08.760 --> 00:34:12.760
Rotational, rotational, translational, rotational, that's important to know

00:34:13.760 --> 00:34:15.760
because that shows us what needs to be variable also.

00:34:16.760 --> 00:34:18.760
Okay, next step?

00:34:19.760 --> 00:34:23.760
For the first joint maybe, let's see whether that's an animation or not.

00:34:23.800 --> 00:34:26.800
It is, okay, so what do you do for the first one?

00:34:35.800 --> 00:34:38.800
That is the rotational axis for what?

00:34:41.800 --> 00:34:44.800
That is along the axis of rotation, yes, that's already shown, right?

00:34:45.800 --> 00:34:48.800
So here's the rotation of the first joint that is inside that, let's say,

00:34:48.840 --> 00:34:53.840
okay, so we need to take a look at how much it has turned in relation to this one, right?

00:34:54.840 --> 00:34:56.840
Okay, and how much is it?

00:35:03.840 --> 00:35:06.840
So our x1 is here, our x0 is there.

00:35:09.840 --> 00:35:14.840
So we have to take a look at how much it has turned in relation to this one, right?

00:35:14.880 --> 00:35:19.880
So our x1 is here, our x0 is there, yes?

00:35:22.880 --> 00:35:24.880
It's the same?

00:35:25.880 --> 00:35:29.880
x is pointing here and x is pointing there, this is not the same, right?

00:35:35.880 --> 00:35:40.880
We can take a look from 0 to 1 in the index, right?

00:35:41.880 --> 00:35:43.880
That's what you wanted to do.

00:35:44.880 --> 00:35:46.880
What did you say?

00:35:51.880 --> 00:35:53.880
What did you say?

00:35:55.880 --> 00:36:00.880
Pi by 2, pi divided by 2, pi over 2, yes.

00:36:01.880 --> 00:36:06.880
So pi and a half is the rotation between them because it's basically going from here

00:36:07.880 --> 00:36:09.880
and rotating over there, right?

00:36:09.920 --> 00:36:14.920
So we have a line y0 and x1 aligned, so basically we have that rotation,

00:36:15.920 --> 00:36:18.920
quarter circle pi over 2.

00:36:19.920 --> 00:36:25.920
But not only this, we have the rotation of the joint itself that comes on top.

00:36:26.920 --> 00:36:29.920
Okay, so that would be the first component, theta 1.

00:36:30.920 --> 00:36:32.920
What is the 1?

00:36:34.920 --> 00:36:38.920
You don't actually see this here, you need the other part of the picture.

00:36:39.920 --> 00:36:41.920
Let me see if I can get you there.

00:36:42.920 --> 00:36:44.920
What is...

00:36:47.920 --> 00:36:49.920
h0 plus h1 is what you say?

00:36:50.920 --> 00:36:54.920
Yes, so this is basically the height difference between the bases,

00:36:55.920 --> 00:37:01.920
so the coordinate frame was here and that level here where the other coordinate frame was.

00:37:02.920 --> 00:37:04.920
Okay, good.

00:37:05.920 --> 00:37:07.920
Is that variable, yes or no?

00:37:07.960 --> 00:37:09.960
Not variable, why?

00:37:10.960 --> 00:37:13.960
It's a revolute joint here, right?

00:37:14.960 --> 00:37:17.960
So not a cylindrical in that sense, it's just revolute.

00:37:18.960 --> 00:37:20.960
And this is basically the geometry of the manipulator, right?

00:37:21.960 --> 00:37:22.960
There's just a height difference.

00:37:23.960 --> 00:37:24.960
Okay, good.

00:37:25.960 --> 00:37:26.960
Next step would be b.

00:37:27.960 --> 00:37:28.960
What is b?

00:37:29.960 --> 00:37:34.960
L1, because this is how we come from where the coordinate frame is placed.

00:37:35.000 --> 00:37:37.000
This is assumed here, yeah.

00:37:39.000 --> 00:37:41.000
It is L1, so it's that distance.

00:37:42.000 --> 00:37:43.000
I mean here this is...

00:37:44.000 --> 00:37:47.000
It looks a bit different, but yes, it is from here to there,

00:37:48.000 --> 00:37:53.000
so the distance between the coordinate frames in this direction.

00:37:54.000 --> 00:37:56.000
Good, and then what is missing is alpha?

00:38:01.000 --> 00:38:02.000
Q1?

00:38:02.040 --> 00:38:04.040
No, Q1 is in theta already.

00:38:05.040 --> 00:38:06.040
Alpha should be fixed.

00:38:11.040 --> 00:38:14.040
90 degrees, so again pi over 2.

00:38:15.040 --> 00:38:16.040
Why?

00:38:17.040 --> 00:38:18.040
Or where?

00:38:19.040 --> 00:38:21.040
Let's maybe go...

00:38:27.040 --> 00:38:29.040
Well, let's go back to the definition.

00:38:29.080 --> 00:38:34.080
So alpha is the angle between the previous and the next z-axis, right?

00:38:35.080 --> 00:38:38.080
So if we do this here, I need to be careful again,

00:38:39.080 --> 00:38:43.080
previous and next z-axis, z-axis here, z-axis there.

00:38:44.080 --> 00:38:46.080
No, wrong, this one here.

00:38:47.080 --> 00:38:50.080
So we turn from here to there, which is coming out of the plane.

00:38:55.080 --> 00:38:56.080
That's a problem, yeah, right.

00:38:56.120 --> 00:39:01.120
But you see it, so z0 points upwards, z1 points outwards.

00:39:05.120 --> 00:39:07.120
So that is again pi over 2.

00:39:08.120 --> 00:39:12.120
And then we basically go on like this over and over again.

00:39:13.120 --> 00:39:15.120
You can check whether the table aligns with yours.

00:39:16.120 --> 00:39:18.120
I think if we go through all the steps it would be too much.

00:39:19.120 --> 00:39:23.120
What you see is the theta and the d are the ones which can be variable, right?

00:39:23.160 --> 00:39:27.160
So Q1 is a rotational, so joint 1 is a rotational joint,

00:39:28.160 --> 00:39:29.160
this is why we have Q1 here.

00:39:30.160 --> 00:39:32.160
Second one is rotational, Q2.

00:39:33.160 --> 00:39:35.160
Fourth one is rotational, Q4.

00:39:36.160 --> 00:39:39.160
And the third one is translational, this is why here we have a Q3

00:39:40.160 --> 00:39:45.160
because it's not just the geometry, L3 plus L2, L2 plus L3,

00:39:46.160 --> 00:39:50.160
but on top of this the translational change that can happen through the joint.

00:39:50.200 --> 00:39:52.200
Therefore, for sure the rotation here is a fixed one,

00:39:53.200 --> 00:39:58.200
so it is always joints having a single degree of freedom in this case.

00:40:00.200 --> 00:40:05.200
And then here this is all just geometry of the manipulator behind.

00:40:06.200 --> 00:40:10.200
If you set up this table, or after you set up this table,

00:40:11.200 --> 00:40:14.200
you can now set up the Q matrix and the S matrix making the A matrices.

00:40:15.200 --> 00:40:19.200
We don't do every step, we just take a look at how the table is set up.

00:40:20.200 --> 00:40:22.200
This is how the A matrices look like.

00:40:23.200 --> 00:40:26.200
They are all having that rotational part, the translational part,

00:40:27.200 --> 00:40:29.200
here again rotational, translational and so on and so on.

00:40:30.200 --> 00:40:31.200
One second.

00:40:36.200 --> 00:40:41.200
And as we have learned before, we can put one, or multiply one with each other

00:40:42.200 --> 00:40:45.200
to get the overall transformation from here to there.

00:40:45.240 --> 00:40:51.240
With that we have a description of the kinematic structure of the mechanism,

00:40:52.240 --> 00:40:54.240
the kinematics of the mechanism.

00:40:55.240 --> 00:40:57.240
So that is one way of showing it.

00:40:58.240 --> 00:40:59.240
Yes?

00:40:59.280 --> 00:41:01.280
Then it should be minus.

00:41:26.280 --> 00:41:28.280
Then it should be minus.

00:41:29.280 --> 00:41:30.280
Okay.

00:41:33.280 --> 00:41:34.280
Yes?

00:41:44.280 --> 00:41:46.280
So I also need to zoom in.

00:41:48.280 --> 00:41:50.280
Let's go back to the definition, right?

00:41:51.280 --> 00:41:58.280
So the definition says that alpha is the angle between the previous and the upcoming.

00:41:59.280 --> 00:42:03.280
So now we take a look at that thing.

00:42:04.280 --> 00:42:05.280
Hm?

00:42:06.280 --> 00:42:07.280
For sure.

00:42:11.280 --> 00:42:16.280
Mathematical formulation, so counterclockwise is positive, clockwise is negative.

00:42:17.280 --> 00:42:20.280
So if you take a look at this, it should be like,

00:42:21.280 --> 00:42:26.280
we take a look from the previous to that one and that would be counterclockwise, right?

00:42:26.320 --> 00:42:28.320
From the previous to the upcoming.

00:42:29.320 --> 00:42:31.320
And looking from here, that's counterclockwise.

00:42:34.320 --> 00:42:35.320
Okay?

00:42:38.320 --> 00:42:39.320
Okay.

00:42:40.320 --> 00:42:41.320
Good.

00:42:42.320 --> 00:42:44.320
Next version to do it is vector parameters.

00:42:45.320 --> 00:42:49.320
Again, we get a set of four parameters, so to speak,

00:42:50.320 --> 00:42:53.320
but this time those four parameters are not all scalars.

00:42:53.360 --> 00:42:55.360
But the first two ones are vectors.

00:42:56.360 --> 00:43:02.360
So this one here, E, is the unit vector defining the rotational or translational axis.

00:43:03.360 --> 00:43:06.360
So this goes along, here for example, it's a rotational joint,

00:43:07.360 --> 00:43:13.360
E is pointing towards or is going, is aligned with the axis of rotation.

00:43:14.360 --> 00:43:22.360
B is then the link vector that describes from the previous to the current link.

00:43:23.360 --> 00:43:28.360
The, yeah, the position change, let's say, so the length, the direction.

00:43:29.360 --> 00:43:34.360
It's not about the orientation of the coordinate frame, but it's the positioning, let's say.

00:43:35.360 --> 00:43:40.360
Then theta is the rotational coordinate measured around E,

00:43:41.360 --> 00:43:42.360
so similar to what the Z was before.

00:43:43.360 --> 00:43:46.360
This is basically here what gives you the rotation of the joint

00:43:47.360 --> 00:43:52.360
plus for example, state, static parts due to the geometry,

00:43:53.360 --> 00:43:55.360
and contains the variable part as well.

00:43:56.360 --> 00:43:59.360
And the same goes for the D as the distance measured in the direction of E,

00:44:00.360 --> 00:44:05.360
so that would be the displacement or the displacement plus the geometrically caused part.

00:44:06.360 --> 00:44:10.360
Again, we can set up our A matrix from this, so this is not another thing,

00:44:11.360 --> 00:44:12.360
it's just another way to get there.

00:44:13.360 --> 00:44:17.360
We have a rotational matrix, again, that is a function of theta and E here.

00:44:17.400 --> 00:44:22.400
And then we have the translatory parts with the unit vector

00:44:23.400 --> 00:44:27.400
adding up to each other to get the positional,

00:44:28.400 --> 00:44:32.400
or the translational aspect back here also covered.

00:44:33.400 --> 00:44:37.400
And then we can set up basically the same table.

00:44:38.400 --> 00:44:40.400
In this case here, it's done a bit differently,

00:44:41.400 --> 00:44:44.400
so we have a different way of, so same manipulator as in the ink glass exercise,

00:44:44.440 --> 00:44:47.440
but now with different alignment of the frames.

00:44:48.440 --> 00:45:02.440
We also have one more, we have zero here, one there, two, three, four and five.

00:45:03.440 --> 00:45:05.440
And then we can set up the table again.

00:45:06.440 --> 00:45:11.440
What we will find here is again, theta and D are the two ones that are variable.

00:45:11.480 --> 00:45:17.480
Q1, Q2, Q4 are rotational, Q3 is translational.

00:45:18.480 --> 00:45:21.480
We have the axis around which things happen.

00:45:22.480 --> 00:45:25.480
So here for example, the beginning is a line with Z, right?

00:45:26.480 --> 00:45:28.480
That would be this, and so on and so on.

00:45:29.480 --> 00:45:36.480
And we have the geometry inside here, so H0 for the first step,

00:45:36.480 --> 00:45:39.480
because we just go up there, then we go L to the side

00:45:39.520 --> 00:45:43.520
and H1 to the top and so on again for the others.

00:45:44.520 --> 00:45:46.520
Why do we have five steps here?

00:45:54.520 --> 00:45:56.520
Maybe something that we take a look at later.

00:45:57.520 --> 00:46:02.520
So here are the matrices taken from the vector parameter representation.

00:46:03.520 --> 00:46:06.520
Again, we multiply them together to get the overall one.

00:46:06.560 --> 00:46:08.560
So all those to this one.

00:46:09.560 --> 00:46:12.560
And what we will come up with is then here the solution.

00:46:12.560 --> 00:46:15.560
Maybe hard to read on the beamer, but maybe later on at home.

00:46:16.560 --> 00:46:22.560
So here is from zero to four, and here it's from zero to five.

00:46:23.560 --> 00:46:27.560
That is basically due to having one more coordinate frame.

00:46:28.560 --> 00:46:30.560
Basically both have a coordinate frame in the end.

00:46:30.600 --> 00:46:34.600
This one is just taking the step from the joint to the coordinate frame.

00:46:35.600 --> 00:46:37.600
So this one has one less previously.

00:46:38.600 --> 00:46:42.600
Finally, all ends up into four by four transformation matrices,

00:46:42.600 --> 00:46:43.600
which is clear.

00:46:44.600 --> 00:46:49.600
All have a typical abbreviation that is common in robotics.

00:46:49.600 --> 00:46:54.600
So instead of sinus Q i or cosinus Q i,

00:46:54.600 --> 00:46:57.600
we just say as a function of the coordinate frame.

00:46:57.640 --> 00:47:00.640
So instead of sinus Q i or cosinus Q i,

00:47:00.640 --> 00:47:03.640
we just say as i or C i.

00:47:04.640 --> 00:47:08.640
This totally makes sense because we have so many trigonometric functions in this

00:47:08.640 --> 00:47:10.640
that it's hard to write it down anymore.

00:47:11.640 --> 00:47:14.640
So you will just say as one of sinus of Q 1,

00:47:15.640 --> 00:47:18.640
C 2 is cosinus of Q 2,

00:47:19.640 --> 00:47:23.640
and S 4 would be sinus of Q 4.

00:47:23.680 --> 00:47:27.680
It also goes for edit angles, we will say later.

00:47:28.680 --> 00:47:31.680
So finally you see the difference here.

00:47:32.680 --> 00:47:37.680
What makes them look different is that basically this coordinate frame

00:47:37.680 --> 00:47:41.680
and this coordinate frame, they are rotated about the z-axis.

00:47:41.680 --> 00:47:45.680
So here y is going out and here x.

00:47:46.680 --> 00:47:48.680
So this is turned by 90 degrees.

00:47:48.680 --> 00:47:52.680
This is something that changes the structure here.

00:47:53.680 --> 00:47:55.680
Okay, good.

00:47:55.680 --> 00:47:58.680
Now we want to do kinematic calculations.

00:47:59.680 --> 00:48:03.680
And for that we go to concepts at first.

00:48:04.680 --> 00:48:08.680
So what we want to do is forward and inward kinematic problems

00:48:08.680 --> 00:48:10.680
is what we want to solve.

00:48:10.680 --> 00:48:15.680
And for that we need to distinguish terminology again.

00:48:15.680 --> 00:48:19.680
So we call the internal coordinates is what the joints are.

00:48:19.720 --> 00:48:22.720
So the Q 1 to Q N, depending on how many we have,

00:48:22.720 --> 00:48:24.720
we call internal coordinates.

00:48:24.720 --> 00:48:27.720
And the external coordinates is what happens in the workspace.

00:48:27.720 --> 00:48:29.720
So for example, I want to...

00:48:30.720 --> 00:48:32.720
I'm a planar robot.

00:48:33.720 --> 00:48:35.720
Let's put it this way.

00:48:35.720 --> 00:48:38.720
With two degrees of freedom in this plane, right?

00:48:38.720 --> 00:48:42.720
So the positioning in the plane could be x,

00:48:42.720 --> 00:48:45.720
could be y, could be x, and could be rotation, right?

00:48:45.760 --> 00:48:49.760
So with that I can describe how the piece of chalk is lying around.

00:48:49.760 --> 00:48:54.760
It has x, y position and it has a certain angle,

00:48:54.760 --> 00:48:57.760
if it's not a point, which it is not.

00:48:57.760 --> 00:48:59.760
And that's the external coordinates

00:48:59.760 --> 00:49:02.760
because that describes how I position the end effector

00:49:02.760 --> 00:49:07.760
and the thing that I transport in the workspace.

00:49:07.760 --> 00:49:10.760
The other thing that I have is I have one, two,

00:49:10.760 --> 00:49:14.760
maybe three degrees of freedom if I can rotate them.

00:49:14.800 --> 00:49:17.800
And what I would like to know is how they relate to each other.

00:49:17.800 --> 00:49:21.800
So how do I get from the Q 1, Q 2,

00:49:21.800 --> 00:49:27.800
Q 3 rotational joints to an x, y rotation?

00:49:27.800 --> 00:49:31.800
And that mapping is what we call the forward kinematics function.

00:49:31.800 --> 00:49:37.800
So a P of Q, P depending on Q.

00:49:37.800 --> 00:49:41.800
For that we relate the joint positions to the end effector pose

00:49:41.800 --> 00:49:43.800
and the effector position to the end effector position.

00:49:43.840 --> 00:49:47.840
And the effector pose again represented by a rotational matrix

00:49:47.840 --> 00:49:51.840
and by the translatory position.

00:49:51.840 --> 00:49:56.840
So we can do this for a serious manipulator

00:49:56.840 --> 00:50:01.840
by basically taking our transformation matrices

00:50:01.840 --> 00:50:05.840
from one joint to each other, multiplying them,

00:50:05.840 --> 00:50:08.840
adding the part from the base frame to the basis

00:50:08.840 --> 00:50:10.840
if this is not coinciding.

00:50:10.880 --> 00:50:14.880
And with that we get a transformation matrix

00:50:14.880 --> 00:50:19.880
that brings us from the one to the other representation.

00:50:19.880 --> 00:50:22.880
And that can be quite cumbersome for sure

00:50:22.880 --> 00:50:25.880
depending on how many joints we have.

00:50:25.880 --> 00:50:31.880
So now we get back to what we have only seen so far.

00:50:31.880 --> 00:50:34.880
We might have a parallel mechanism.

00:50:34.880 --> 00:50:37.880
One example is so-called delta mechanisms

00:50:37.920 --> 00:50:42.920
which are usually designed in a way that you have a point

00:50:42.920 --> 00:50:47.920
that is moved by three legs with maybe degrees of freedom themselves.

00:50:47.920 --> 00:50:52.920
So here we have in the one plane, zx plane, we have two angles.

00:50:52.920 --> 00:50:55.920
In the zy plane we have another angle.

00:50:55.920 --> 00:50:57.920
So each leg has three angles.

00:50:57.920 --> 00:51:00.920
And we are moving the point P basically

00:51:00.920 --> 00:51:05.920
or the plate with the point P up here.

00:51:05.960 --> 00:51:07.960
Why are we doing such things?

00:51:07.960 --> 00:51:10.960
Because they are quite useful, for example, in haptic interfaces.

00:51:10.960 --> 00:51:12.960
So this here is the Novin Falcon,

00:51:12.960 --> 00:51:16.960
it's a cheap version of the, I think it was the Phantom Omni.

00:51:16.960 --> 00:51:19.960
No, do I mix it up? Doesn't matter.

00:51:19.960 --> 00:51:21.960
So different products.

00:51:21.960 --> 00:51:24.960
This is the gaming version, let's say, of such a haptic interface.

00:51:24.960 --> 00:51:27.960
I don't think it's used for many games,

00:51:27.960 --> 00:51:30.960
but it was the cheaper version, let's say, that way.

00:51:30.960 --> 00:51:32.960
So for haptic interfaces you can use it.

00:51:32.960 --> 00:51:34.960
You grasp this here and then you move it

00:51:35.000 --> 00:51:39.000
and then it has actuators to give you false feedback.

00:51:39.000 --> 00:51:43.000
The other solution where such mechanisms play a big role

00:51:43.000 --> 00:51:45.000
is here, for example, delta robots,

00:51:45.000 --> 00:51:48.000
where you have actuators here on the top,

00:51:48.000 --> 00:51:53.000
then you move the bases down there by moving the legs.

00:51:53.000 --> 00:51:57.000
And through that you can do very precise pick and plays.

00:51:57.000 --> 00:51:59.000
For example, it's very stiff, can be super fast,

00:51:59.000 --> 00:52:03.000
so I think the fastest pick and plays robots are usually delta robots.

00:52:03.040 --> 00:52:07.040
And this shows you that there's parallel kinematics.

00:52:07.040 --> 00:52:09.040
They have a reason.

00:52:09.040 --> 00:52:13.040
They are there for, not only for being there,

00:52:13.040 --> 00:52:15.040
but they have their use.

00:52:15.040 --> 00:52:18.040
So here internal coordinates are the thetas.

00:52:18.040 --> 00:52:22.040
External coordinates are x, y, z of the P-point.

00:52:22.040 --> 00:52:25.040
And now we don't go into the mask.

00:52:25.040 --> 00:52:28.040
We just take a quick look at how that would be approached.

00:52:28.040 --> 00:52:30.040
If you want to use it in your MDP,

00:52:30.080 --> 00:52:33.080
you can, for example, take a look in the Hatzfeld and Cannes.

00:52:33.080 --> 00:52:34.080
They describe deeply.

00:52:34.080 --> 00:52:36.080
We don't have the time here.

00:52:36.080 --> 00:52:40.080
So here basically they assume that the points B

00:52:40.080 --> 00:52:46.080
are on the surface of a sphere with the radius B and the center C i.

00:52:46.080 --> 00:52:48.080
So that would be here.

00:52:48.080 --> 00:52:53.080
And with that they determine how they get to one point of the sphere

00:52:53.080 --> 00:52:56.080
and can calculate through that mechanism.

00:52:56.080 --> 00:52:59.080
As I said, no details here.

00:52:59.120 --> 00:53:04.120
This is something that would take too long for the lecture today.

00:53:04.120 --> 00:53:08.120
So the other way around is for sure also interesting.

00:53:08.120 --> 00:53:15.120
How do we get from the external coordinates to the internal coordinates?

00:53:15.120 --> 00:53:19.120
So for example, we want to place the piece of chalk in a certain way.

00:53:19.120 --> 00:53:23.120
We have a robot with a certain number of degrees of freedom.

00:53:23.160 --> 00:53:29.160
And now we want to map back to find how that could look like

00:53:29.160 --> 00:53:32.160
or how that could be implemented with that structure of robot.

00:53:32.160 --> 00:53:38.160
The problem here is that there might be no closed form solution.

00:53:38.160 --> 00:53:42.160
We might have multiple solutions

00:53:42.160 --> 00:53:45.160
and we might end up with kinematic singularities.

00:53:45.160 --> 00:53:46.160
We will see this later.

00:53:46.160 --> 00:53:50.160
So here again we are taking a quick look,

00:53:50.200 --> 00:53:53.200
not a complete look at the delta mechanism.

00:53:53.200 --> 00:53:58.200
What we are doing there is we describe the way from the origin

00:53:58.200 --> 00:54:00.200
to the point B in two different ways.

00:54:00.200 --> 00:54:03.200
So one's from O to P to B.

00:54:03.200 --> 00:54:05.200
That's this part.

00:54:05.200 --> 00:54:10.200
And one's from O to A to C to B.

00:54:10.200 --> 00:54:13.200
So that's that part.

00:54:13.200 --> 00:54:16.200
It's actually the same for all of the three legs

00:54:16.200 --> 00:54:18.200
just turned by 120 degrees here.

00:54:18.240 --> 00:54:20.240
We are taking a look at one leg.

00:54:20.240 --> 00:54:23.240
You would do it individually anyway.

00:54:23.240 --> 00:54:28.240
So what we can obtain is we get the position here with the thetas

00:54:28.240 --> 00:54:32.240
and we can get the position here with the phi's

00:54:32.240 --> 00:54:35.240
and especially with the P position

00:54:35.240 --> 00:54:40.240
and the diameters of these spheres.

00:54:40.240 --> 00:54:43.240
So with that we come to B.

00:54:43.280 --> 00:54:48.280
And then we can say they are the same

00:54:48.280 --> 00:54:53.280
and then solve for theta 1, 2 and 3 of the corresponding leg

00:54:53.280 --> 00:54:58.280
so of the leg that is under investigation, let's say.

00:54:58.280 --> 00:55:03.280
So with that we could solve it for the delta mechanism

00:55:03.280 --> 00:55:06.280
which is for sure not simple still.

00:55:06.280 --> 00:55:09.280
It means the equation system that we need to set up

00:55:09.280 --> 00:55:11.280
where we need to know all the parameters

00:55:11.320 --> 00:55:16.320
but here it's okay because we have 3 and 3 so we can solve it.

00:55:16.320 --> 00:55:19.320
The problem is for sure how does it work

00:55:19.320 --> 00:55:23.320
if it's not identical, the number of degrees of freedom.

00:55:23.320 --> 00:55:27.320
And we can do the same thing for sure also for series chains.

00:55:27.320 --> 00:55:32.320
Here one example, a three degree of freedom robot in the plane

00:55:32.320 --> 00:55:35.320
so that was basically similar to what I've shown you with myself

00:55:35.320 --> 00:55:37.320
on the test.

00:55:37.360 --> 00:55:40.360
Here the overall angle would be the sum of the angles

00:55:40.360 --> 00:55:42.360
of the joints for sure.

00:55:42.360 --> 00:55:45.360
So the angle between this one here and the x axis

00:55:45.360 --> 00:55:48.360
is basically the sum of the three angles.

00:55:48.360 --> 00:55:52.360
With that we can set up where the position of that thing

00:55:52.360 --> 00:55:58.360
is in x and in y direction for the end point here.

00:55:58.360 --> 00:56:01.360
Oh, no, we do it for here.

00:56:01.360 --> 00:56:04.360
And for the end point here we can set up

00:56:04.400 --> 00:56:06.400
oh, no, we do it for here.

00:56:06.400 --> 00:56:08.400
And for that we can do it with the end points

00:56:08.400 --> 00:56:12.400
and calculate back, for example from here to there.

00:56:12.400 --> 00:56:16.400
Or we can go from here to there to there

00:56:16.400 --> 00:56:18.400
which would be the letter part here.

00:56:18.400 --> 00:56:25.400
And here you already see C12 would be the cosines of Q1 plus Q2.

00:56:27.400 --> 00:56:31.400
Then you can sum up those two to get here

00:56:31.440 --> 00:56:35.440
and with that you can determine the cosines and the sinines

00:56:35.440 --> 00:56:39.440
where the sinines has actually two options

00:56:39.440 --> 00:56:43.440
and then you can put them into the Arcos-Tungence 2 function

00:56:43.440 --> 00:56:47.440
which will give you the Q2 variable.

00:56:47.440 --> 00:56:50.440
So this is a modified Arcos-Tungence function

00:56:50.440 --> 00:56:53.440
that is for example in Matlab Single Link package

00:56:53.440 --> 00:56:56.440
which takes into account the quadrant

00:56:56.440 --> 00:56:58.440
of where you are calculating.

00:56:58.480 --> 00:57:00.480
Let's say it's quite important in robotics.

00:57:00.480 --> 00:57:04.480
So here when you have that you can for sure put that also

00:57:04.480 --> 00:57:08.480
into the parts above and with that calculate Q1

00:57:08.480 --> 00:57:14.480
so that you are subsequently solving the equations

00:57:14.480 --> 00:57:17.480
to get the three angles out of the orientation

00:57:17.480 --> 00:57:20.480
and the x, y position of the end effector that you know.

00:57:20.480 --> 00:57:24.480
So this is inverse kinematics calculation

00:57:24.480 --> 00:57:27.480
because finally the third one is the same.

00:57:27.520 --> 00:57:29.520
Finally the third one is super easy.

00:57:29.520 --> 00:57:31.520
We know theta is the sum of the three

00:57:31.520 --> 00:57:35.520
so we just need to subtract Q1 and Q2.

00:57:35.520 --> 00:57:39.520
So with that we are through the position

00:57:39.520 --> 00:57:42.520
and orientation part for today.

00:57:42.520 --> 00:57:45.520
We will get back there in the upcoming weeks several times

00:57:45.520 --> 00:57:49.520
but before that we should think about velocities

00:57:49.520 --> 00:57:51.520
and if we think about velocities

00:57:51.520 --> 00:57:55.520
it's where we come up with the so-called Jacobian matrix

00:57:55.560 --> 00:57:59.560
which now relates the velocity of the external coordinates

00:57:59.560 --> 00:58:01.560
to the internal coordinates.

00:58:01.560 --> 00:58:05.560
And for that we basically take our kinematics function

00:58:05.560 --> 00:58:09.560
which is basically P as a function of Q

00:58:09.560 --> 00:58:13.560
so external coordinates as a function of internal coordinates

00:58:13.560 --> 00:58:15.560
and we derive it with respect to time.

00:58:16.560 --> 00:58:20.560
So basically that's what is written here in the second part

00:58:20.560 --> 00:58:22.560
time derivative of P of Q

00:58:22.600 --> 00:58:25.600
and that means that we will have here

00:58:25.600 --> 00:58:28.600
partial differentials in a matrix

00:58:28.600 --> 00:58:30.600
that's the Jacobian

00:58:30.600 --> 00:58:33.600
and this is multiplied, chain rule applies here

00:58:33.600 --> 00:58:37.600
to the actual time derivatives of the joints.

00:58:38.600 --> 00:58:42.600
And this is why calculating J is important

00:58:42.600 --> 00:58:44.600
to know how that works.

00:58:44.600 --> 00:58:48.600
So basically we derive P1 with respect to all Qs

00:58:48.600 --> 00:58:51.600
P2 with respect to all Qs

00:58:51.640 --> 00:58:54.640
and then the final PM in this case here

00:58:54.640 --> 00:58:56.640
with respect to all Qs.

00:58:56.640 --> 00:58:59.640
And with that we get M times N Jacobian matrix

00:58:59.640 --> 00:59:01.640
depending, it is square

00:59:01.640 --> 00:59:04.640
if we have the same number of degrees of freedom

00:59:04.640 --> 00:59:07.640
in the input and output like in a previous example

00:59:07.640 --> 00:59:09.640
but it doesn't need to be square.

00:59:10.640 --> 00:59:13.640
So here this is the basis of differential kinematics

00:59:13.640 --> 00:59:17.640
differential means the kinematics of velocities

00:59:17.640 --> 00:59:20.640
and so the relationship between the velocities

00:59:20.680 --> 00:59:22.680
of the internal and external coordinates.

00:59:22.680 --> 00:59:25.680
And this is important already now

00:59:25.680 --> 00:59:29.680
for the forward and backward

00:59:29.680 --> 00:59:31.680
inverse kinematics also

00:59:31.680 --> 00:59:33.680
because we can use it in algorithms

00:59:33.680 --> 00:59:36.680
if we have the problem that the inverse kinematics

00:59:36.680 --> 00:59:37.680
cannot be solved.

00:59:37.680 --> 00:59:41.680
And then we use the inverse differential kinematics

00:59:41.680 --> 00:59:45.680
which basically maps the external velocities

00:59:45.680 --> 00:59:47.680
to the internal ones

00:59:47.680 --> 00:59:49.680
we need to invert the Jacobian

00:59:49.720 --> 00:59:51.720
which is for sure a function of Q

00:59:51.720 --> 00:59:54.720
and with that we can then numerically solve

00:59:54.720 --> 00:59:56.720
the inverse kinematics problem.

00:59:56.720 --> 00:59:58.720
So in this case that works the way

00:59:58.720 --> 01:00:02.720
that the initial internal coordinates are given

01:00:02.720 --> 01:00:04.720
or should be known.

01:00:04.720 --> 01:00:07.720
We have a target external coordinate

01:00:07.720 --> 01:00:10.720
and the target velocity where we need to get to

01:00:10.720 --> 01:00:13.720
and then we can basically

01:00:14.720 --> 01:00:17.720
discretize here over K time steps

01:00:17.760 --> 01:00:21.760
we calculate how far we are away basically

01:00:21.760 --> 01:00:23.760
from that solution that we want.

01:00:23.760 --> 01:00:26.760
So here is Pd is the desired value

01:00:26.760 --> 01:00:31.760
Pk minus one is what we determined in the last iteration

01:00:31.760 --> 01:00:36.760
and if that error is below a certain value

01:00:36.760 --> 01:00:40.760
then we say that's fine as long as it is not

01:00:40.760 --> 01:00:44.760
we determine the new velocity let's say

01:00:44.800 --> 01:00:46.800
based on the inverse of the Jacobian

01:00:46.800 --> 01:00:50.800
and then here we have basically the error from before

01:00:50.800 --> 01:00:56.800
plus the desired velocity with a K factor here

01:00:56.800 --> 01:00:58.800
so with a constant factor

01:00:58.800 --> 01:01:01.800
so that we adapt the velocity

01:01:01.800 --> 01:01:06.800
to finally add that next step with a certain velocity

01:01:06.800 --> 01:01:09.800
over a defined time interval

01:01:09.800 --> 01:01:12.800
to our value before

01:01:12.840 --> 01:01:15.840
and with that get the next value of Q

01:01:15.840 --> 01:01:20.840
and the closer we are to match the desired P

01:01:20.840 --> 01:01:23.840
the better we know which Qs we need to put

01:01:23.840 --> 01:01:26.840
so that would be for one Q here

01:01:26.840 --> 01:01:28.840
or we do it since we do it with matrices

01:01:28.840 --> 01:01:30.840
for sure these are vectors

01:01:30.840 --> 01:01:32.840
so then we have it for all the Qs.

01:01:32.840 --> 01:01:36.840
So if Pd would be zero

01:01:36.840 --> 01:01:38.840
that corresponds to the Newton method

01:01:38.840 --> 01:01:40.840
for solving nonlinear equation systems

01:01:40.880 --> 01:01:44.880
here this is an application in robotics

01:01:44.880 --> 01:01:49.880
so the next thing we need to think about is singularities

01:01:49.880 --> 01:01:53.880
and we didn't introduce them here so far

01:01:53.880 --> 01:01:55.880
that's a bit

01:01:55.880 --> 01:01:57.880
actually a bit unfortunate

01:01:57.880 --> 01:01:59.880
we might turn that

01:01:59.880 --> 01:02:01.880
so the problem is once

01:02:01.880 --> 01:02:03.880
actually we can introduce them here

01:02:03.880 --> 01:02:05.880
but we see them better later on

01:02:05.880 --> 01:02:09.880
so the next step is

01:02:09.920 --> 01:02:11.920
the Jacobian

01:02:11.920 --> 01:02:14.920
as I said might not be square

01:02:14.920 --> 01:02:16.920
if it might not be square

01:02:16.920 --> 01:02:20.920
it would for sure also not be invertible

01:02:20.920 --> 01:02:22.920
in that sense, right?

01:02:22.920 --> 01:02:25.920
so the calculation forth and back can get complicated

01:02:25.920 --> 01:02:29.920
so if it's not invertible we are in a singular pose

01:02:29.920 --> 01:02:32.920
that depends also even if it's square

01:02:32.920 --> 01:02:35.920
it can get non-invertible

01:02:35.920 --> 01:02:38.920
due to the influence that Q has

01:02:38.960 --> 01:02:40.960
and this is what you see here

01:02:40.960 --> 01:02:42.960
so if you stretch out the arm

01:02:42.960 --> 01:02:44.960
you cannot go any further, right?

01:02:44.960 --> 01:02:46.960
so you are in a singular pose

01:02:46.960 --> 01:02:48.960
if you are here

01:02:48.960 --> 01:02:50.960
you can rotate around this axis

01:02:50.960 --> 01:02:52.960
and you have multiple solutions

01:02:52.960 --> 01:02:54.960
that lead to the same end effector

01:02:54.960 --> 01:02:56.960
and position

01:02:56.960 --> 01:02:59.960
if you don't think about orientation at least

01:02:59.960 --> 01:03:01.960
and for that

01:03:01.960 --> 01:03:03.960
you take different solutions

01:03:03.960 --> 01:03:05.960
for that inverse kinematics algorithm

01:03:05.960 --> 01:03:07.960
you either work with just the Jacobian transpose

01:03:08.000 --> 01:03:10.000
which is an approximation

01:03:10.000 --> 01:03:12.000
but sometimes works quite well

01:03:12.000 --> 01:03:15.000
you can do a Jacobian pseudo inverse

01:03:15.000 --> 01:03:18.000
with potentially in addition to regularize

01:03:18.000 --> 01:03:21.000
or you can use a damped least squares approach

01:03:21.000 --> 01:03:24.000
who knows pseudo inverse and least squares?

01:03:29.000 --> 01:03:30.000
one?

01:03:30.000 --> 01:03:32.000
two?

01:03:33.000 --> 01:03:35.000
so pseudo inverse is basically

01:03:35.040 --> 01:03:37.040
the pseudo inverse of a matrix

01:03:37.040 --> 01:03:39.040
is basically what is written here

01:03:39.040 --> 01:03:41.040
without the lambda I part here

01:03:41.040 --> 01:03:47.040
so you take JT times J times JT in brackets inverted

01:03:47.040 --> 01:03:50.040
so you invert this one, multiply it with that

01:03:50.040 --> 01:03:53.040
and with that you get an approximation

01:03:53.040 --> 01:03:56.040
of the inversion of a non-square matrix

01:03:57.040 --> 01:04:01.040
by the way it's the Moore-Penrose inverse

01:04:01.040 --> 01:04:03.040
and it was

01:04:03.080 --> 01:04:05.080
I'm not sure whom of the two

01:04:05.080 --> 01:04:09.080
I think Penrose was involved in describing black holes

01:04:09.080 --> 01:04:11.080
and is the inventor of this one

01:04:11.080 --> 01:04:13.080
so mathematician and physician

01:04:13.080 --> 01:04:15.080
got a Nobel prize for his work

01:04:15.080 --> 01:04:17.080
great guy

01:04:17.080 --> 01:04:19.080
so but basically what is behind

01:04:19.080 --> 01:04:22.080
we tried to find a way to deal with that

01:04:22.080 --> 01:04:24.080
and for sure we cannot invert it

01:04:24.080 --> 01:04:26.080
but we approximate the inversion

01:04:26.080 --> 01:04:29.080
and this approximation is finally

01:04:29.080 --> 01:04:31.080
this is why it's relating to the damped least squares

01:04:31.120 --> 01:04:33.120
damped least squares

01:04:33.120 --> 01:04:35.120
is finally giving you the least squares solution

01:04:35.120 --> 01:04:37.120
of the

01:04:37.120 --> 01:04:39.120
so if you invert a matrix

01:04:39.120 --> 01:04:41.120
it's basically the solution of

01:04:41.120 --> 01:04:43.120
of an equation system

01:04:43.120 --> 01:04:45.120
right?

01:04:45.120 --> 01:04:47.120
and if you want to solve the equation system

01:04:47.120 --> 01:04:49.120
where the number of variables doesn't fit

01:04:49.120 --> 01:04:51.120
so if it's not square

01:04:51.120 --> 01:04:53.120
then you need to do an approximation

01:04:53.120 --> 01:04:55.120
and that approximation then happens

01:04:55.120 --> 01:04:57.120
in a way that the error

01:04:57.120 --> 01:05:00.120
the quadratic error is getting minimized

01:05:00.160 --> 01:05:02.160
this is what least squares does

01:05:02.160 --> 01:05:04.160
lineare regression in deutschen

01:05:04.160 --> 01:05:06.160
kleinste quadrate methode in deutschen

01:05:06.160 --> 01:05:08.160
for those who learned it in german

01:05:08.160 --> 01:05:11.160
so this is all behind this here

01:05:11.160 --> 01:05:15.160
and you can also do this with singular values

01:05:15.160 --> 01:05:17.160
with singular value decomposition

01:05:17.160 --> 01:05:19.160
which is going even a step further

01:05:19.160 --> 01:05:21.160
I would say I spare you the math here

01:05:21.160 --> 01:05:23.160
but what you see here is

01:05:23.160 --> 01:05:25.160
what happens

01:05:25.160 --> 01:05:27.160
so this is the animation from the paper

01:05:27.160 --> 01:05:29.160
where they do it with singular values

01:05:29.200 --> 01:05:31.200
so here you see

01:05:31.200 --> 01:05:33.200
how the robot moves from here

01:05:33.200 --> 01:05:35.200
to that red point

01:05:37.200 --> 01:05:39.200
going along its own basis

01:05:41.200 --> 01:05:43.200
and if you don't do singularity handling

01:05:43.200 --> 01:05:45.200
you get into the singularity

01:05:45.200 --> 01:05:47.200
where you pass the basis

01:05:47.200 --> 01:05:49.200
then it does this weird jump

01:05:49.200 --> 01:05:51.200
which would lead to very high velocity

01:05:51.200 --> 01:05:53.200
something that no robot will realistically

01:05:53.200 --> 01:05:55.200
be able to do

01:05:55.200 --> 01:05:57.200
if you now handle the singularities

01:05:57.240 --> 01:05:59.240
in this case by

01:05:59.240 --> 01:06:01.240
determining the inverse jacobian

01:06:01.240 --> 01:06:03.240
from singular values

01:06:03.240 --> 01:06:05.240
that you determine

01:06:05.240 --> 01:06:07.240
the singular value decomposition

01:06:07.240 --> 01:06:09.240
which is something that you can also

01:06:09.240 --> 01:06:11.240
get in the software for example

01:06:11.240 --> 01:06:13.240
but this is also something that some of you

01:06:13.240 --> 01:06:15.240
might have learned in math

01:06:15.240 --> 01:06:17.240
then you can go and use this

01:06:17.240 --> 01:06:19.240
in the control of the robot

01:06:19.240 --> 01:06:21.240
and make a very small change

01:06:21.240 --> 01:06:24.240
that actually avoids these very high velocities

01:06:24.240 --> 01:06:26.240
by taking that turn around

01:06:26.280 --> 01:06:28.280
the basis much more smoothly

01:06:30.280 --> 01:06:32.280
so there you see

01:06:32.280 --> 01:06:34.280
the algorithm can do a lot

01:06:34.280 --> 01:06:36.280
if the hardware has a limitation

01:06:36.280 --> 01:06:38.280
you can work around that

01:06:38.280 --> 01:06:40.280
with the algorithm

01:06:40.280 --> 01:06:42.280
that doesn't mean that you need to build

01:06:42.280 --> 01:06:44.280
stupid hardware and intelligent algorithms only

01:06:44.280 --> 01:06:46.280
intelligent hardware is still meaningful

01:06:46.280 --> 01:06:48.280
but here you see a situation

01:06:48.280 --> 01:06:50.280
where the solution is even fine

01:06:50.280 --> 01:06:52.280
with just programming

01:06:52.280 --> 01:06:54.280
so you have the robot standing in your laboratory

01:06:54.320 --> 01:06:56.320
and after 20 years it always does

01:06:56.320 --> 01:06:58.320
its jerky movement

01:06:58.320 --> 01:07:00.320
and you come up with the good idea

01:07:00.320 --> 01:07:02.320
to implement such a

01:07:02.320 --> 01:07:04.320
technique to go around

01:07:04.320 --> 01:07:06.320
and then it works much better

01:07:06.320 --> 01:07:08.320
good, we will go deeper

01:07:08.320 --> 01:07:10.320
into such things later on

01:07:10.320 --> 01:07:12.320
now we quickly talk about

01:07:12.320 --> 01:07:14.320
kinematic design

01:07:14.320 --> 01:07:16.320
so how to design mechanisms

01:07:16.320 --> 01:07:18.320
how do we assess whether they are good or not

01:07:18.320 --> 01:07:20.320
and this is also something

01:07:20.320 --> 01:07:22.320
which we will go into deeper next week

01:07:22.360 --> 01:07:24.360
but I want to start already

01:07:24.360 --> 01:07:26.360
so isotropy is something that is important

01:07:26.360 --> 01:07:28.360
and for that

01:07:28.360 --> 01:07:30.360
we take a look at the jacobian

01:07:30.360 --> 01:07:32.360
and analyze whether

01:07:32.360 --> 01:07:34.360
there might be a singularity and how

01:07:34.360 --> 01:07:36.360
the isotropy looks like

01:07:36.360 --> 01:07:38.360
so there is all stuff that we can see

01:07:38.360 --> 01:07:40.360
from the jacobian

01:07:40.360 --> 01:07:42.360
and here it said

01:07:42.360 --> 01:07:44.360
a kinematic transmission behavior is rated

01:07:44.360 --> 01:07:46.360
by the condition number kappa

01:07:46.360 --> 01:07:48.360
of the inverse jacobian matrix

01:07:48.360 --> 01:07:50.360
there is one approach

01:07:50.400 --> 01:07:52.400
you can find it in hutzfeld and cairn for example

01:07:52.400 --> 01:07:54.400
so here kappa

01:07:54.400 --> 01:07:56.400
is the maximum singular value

01:07:56.400 --> 01:07:58.400
of the inverted jacobian

01:07:58.400 --> 01:08:00.400
divided by the minimum singular value

01:08:00.400 --> 01:08:02.400
they are close to eigenvalues

01:08:02.400 --> 01:08:04.400
so you can determine those

01:08:04.400 --> 01:08:06.400
and determine

01:08:06.400 --> 01:08:08.400
the fraction of the two

01:08:08.400 --> 01:08:10.400
and depending on what

01:08:10.400 --> 01:08:12.400
they become you change the value

01:08:12.400 --> 01:08:14.400
of k you usually

01:08:14.400 --> 01:08:16.400
assess one over k

01:08:16.400 --> 01:08:18.400
and if that becomes one

01:08:18.440 --> 01:08:20.440
you say you have a highly isotropic

01:08:20.440 --> 01:08:22.440
transmission

01:08:22.440 --> 01:08:24.440
so good relationship between external

01:08:24.440 --> 01:08:26.440
and internal coordinates we will see it in

01:08:26.440 --> 01:08:28.440
detail later

01:08:28.440 --> 01:08:30.440
or you have a low one

01:08:30.440 --> 01:08:32.440
or in the worst case zero

01:08:32.440 --> 01:08:34.440
then you would be in such a singular

01:08:34.440 --> 01:08:36.440
behavior so you would have a lower

01:08:36.440 --> 01:08:38.440
rank of the jacobian

01:08:38.440 --> 01:08:40.440
would not be full rank anymore

01:08:40.440 --> 01:08:42.440
what would such

01:08:42.440 --> 01:08:44.440
singular poses mean we have seen them

01:08:44.440 --> 01:08:46.440
in the

01:08:46.480 --> 01:08:48.480
lecture already but now to be a bit more

01:08:48.480 --> 01:08:50.480
specific here

01:08:50.480 --> 01:08:52.480
are two different kinds of singularities

01:08:52.480 --> 01:08:54.480
the first one is

01:08:54.480 --> 01:08:56.480
the first kind so the determinant

01:08:56.480 --> 01:08:58.480
of the jacobian becomes zero

01:08:58.480 --> 01:09:00.480
that means that

01:09:00.480 --> 01:09:02.480
no motion or that motion

01:09:02.480 --> 01:09:04.480
internal motion is not completely

01:09:04.480 --> 01:09:06.480
transmitted to external

01:09:06.480 --> 01:09:08.480
or output motion so one degree

01:09:08.480 --> 01:09:10.480
of freedom or more are lost

01:09:10.480 --> 01:09:12.480
for example here fully stretched out in that

01:09:12.480 --> 01:09:14.480
direction this one cannot become any longer

01:09:14.520 --> 01:09:16.520
we cannot go further we can go elsewhere

01:09:16.520 --> 01:09:18.520
for sure so it is not completely

01:09:18.520 --> 01:09:20.520
impossible to move but we cannot go further

01:09:20.520 --> 01:09:22.520
in that direction

01:09:22.520 --> 01:09:24.520
and that would mean that the jacobian determinant

01:09:24.520 --> 01:09:26.520
goes to zero because

01:09:26.520 --> 01:09:28.520
no velocity would happen in that direction

01:09:28.520 --> 01:09:30.520
let's say that way

01:09:30.520 --> 01:09:32.520
and singularity of the second kind

01:09:32.520 --> 01:09:34.520
is then

01:09:34.520 --> 01:09:36.520
a situation like here

01:09:36.520 --> 01:09:38.520
internal forces

01:09:38.520 --> 01:09:40.520
and torques are not completely transmitted

01:09:40.520 --> 01:09:42.520
to the external or output forces

01:09:42.560 --> 01:09:44.560
this is what would happen somewhere in the middle

01:09:44.560 --> 01:09:46.560
of the workspace while this one here

01:09:46.560 --> 01:09:48.560
happens on the corner

01:09:48.560 --> 01:09:50.560
of the workspace so as I said

01:09:50.560 --> 01:09:52.560
we go deeper into

01:09:52.560 --> 01:09:54.560
singularities

01:09:54.560 --> 01:09:56.560
later on but this is

01:09:56.560 --> 01:09:58.560
important to know

01:09:58.560 --> 01:10:00.560
so what could be a design goal

01:10:00.560 --> 01:10:02.560
we will think

01:10:02.560 --> 01:10:04.560
about force torque transmission for example

01:10:06.560 --> 01:10:08.560
we can take a look here at

01:10:08.560 --> 01:10:10.560
the power

01:10:10.600 --> 01:10:12.600
the mechanical power in this case

01:10:12.600 --> 01:10:14.600
would be force multiplied with the velocity

01:10:16.600 --> 01:10:18.600
here this is with

01:10:18.600 --> 01:10:20.600
external and internal coordinates

01:10:20.600 --> 01:10:22.600
should be the same

01:10:22.600 --> 01:10:24.600
if we don't have losses

01:10:24.600 --> 01:10:26.600
then we can introduce or insert

01:10:26.600 --> 01:10:28.600
the jacobian to bring

01:10:28.600 --> 01:10:30.600
both to the same

01:10:30.600 --> 01:10:32.600
so to external velocities

01:10:32.600 --> 01:10:34.600
and by that find

01:10:34.600 --> 01:10:36.600
that the jacobian will also

01:10:36.600 --> 01:10:38.600
show us how forces

01:10:38.640 --> 01:10:40.640
from the inside to the outside

01:10:40.640 --> 01:10:42.640
would be transferred

01:10:42.640 --> 01:10:44.640
so this is something that could be very

01:10:44.640 --> 01:10:46.640
interesting and for that

01:10:46.640 --> 01:10:48.640
again

01:10:48.640 --> 01:10:50.640
the singular values

01:10:50.640 --> 01:10:52.640
of the jacobian matrix tell us a lot

01:10:52.640 --> 01:10:54.640
same for speed

01:10:54.640 --> 01:10:56.640
and the problem is here

01:10:56.640 --> 01:10:58.640
we want to maximize the minimum

01:10:58.640 --> 01:11:00.640
singular value here we want to

01:11:00.640 --> 01:11:02.640
minimize the maximum singular value

01:11:02.640 --> 01:11:04.640
that finally leads us to a table

01:11:04.640 --> 01:11:06.640
how do we optimize force transmission

01:11:06.680 --> 01:11:08.680
and torque transmission how do we do it for speed

01:11:10.680 --> 01:11:12.680
and what about isotropy

01:11:12.680 --> 01:11:14.680
and they are sometimes

01:11:14.680 --> 01:11:16.680
conflicting so this is something where we need

01:11:16.680 --> 01:11:18.680
to make

01:11:18.680 --> 01:11:20.680
or get an idea of how we

01:11:20.680 --> 01:11:22.680
do it properly

01:11:24.680 --> 01:11:26.680
the problem here is

01:11:26.680 --> 01:11:28.680
this is only for a single

01:11:28.680 --> 01:11:30.680
configuration so for a

01:11:30.680 --> 01:11:32.680
single set of

01:11:32.680 --> 01:11:34.680
for example internal variables

01:11:34.720 --> 01:11:36.720
so we are calculating how it would be here

01:11:36.720 --> 01:11:38.720
and then we need to calculate how it is there

01:11:38.720 --> 01:11:40.720
and this means that

01:11:40.720 --> 01:11:42.720
if we want to

01:11:42.720 --> 01:11:44.720
optimize or

01:11:44.720 --> 01:11:46.720
assess the

01:11:48.720 --> 01:11:50.720
performance

01:11:50.720 --> 01:11:52.720
the kinematic fidelity let's say

01:11:52.720 --> 01:11:54.720
of our mechanism over the whole

01:11:54.720 --> 01:11:56.720
workspace we need to find

01:11:56.720 --> 01:11:58.720
a more global index and this is

01:11:58.720 --> 01:12:00.720
for example one thing that

01:12:00.720 --> 01:12:02.720
was suggested in the literature is the global

01:12:02.760 --> 01:12:04.760
global condition index

01:12:04.760 --> 01:12:06.760
which averages the one over a

01:12:06.760 --> 01:12:08.760
over the whole workspace

01:12:08.760 --> 01:12:10.760
so basically we are integrating

01:12:10.760 --> 01:12:12.760
one over a over the workspace

01:12:12.760 --> 01:12:14.760
this is likely a volume

01:12:14.760 --> 01:12:16.760
and we are integrating

01:12:16.760 --> 01:12:18.760
the volume itself

01:12:18.760 --> 01:12:20.760
and then we divide it so that we have a normalization

01:12:20.760 --> 01:12:22.760
so

01:12:22.760 --> 01:12:24.760
for sure this is not done by

01:12:24.760 --> 01:12:26.760
integrating space but usually

01:12:26.760 --> 01:12:28.760
do it by sampling the workspace

01:12:28.760 --> 01:12:30.760
you do it stepwise you compute the

01:12:30.800 --> 01:12:32.800
one over kappa then you determine

01:12:32.800 --> 01:12:34.800
the one over kappa and with that

01:12:34.800 --> 01:12:36.800
you find the solution

01:12:36.800 --> 01:12:38.800
and here is one example of

01:12:38.800 --> 01:12:40.800
how that might look like for the delta

01:12:40.800 --> 01:12:42.800
mechanism that we have seen before

01:12:42.800 --> 01:12:44.800
also from the Hatzfeldt and Kern book

01:12:44.800 --> 01:12:46.800
so here the design

01:12:46.800 --> 01:12:48.800
objective

01:12:48.800 --> 01:12:50.800
was the length of the

01:12:50.800 --> 01:12:52.800
rods A and B so the two

01:12:52.800 --> 01:12:54.800
parts of the leg needed to

01:12:54.800 --> 01:12:56.800
be determined the radius

01:12:56.800 --> 01:12:58.800
of the

01:12:58.840 --> 01:13:00.840
the TCP platform the upper platform

01:13:00.840 --> 01:13:02.840
the lower platform was also

01:13:02.840 --> 01:13:04.840
part

01:13:04.840 --> 01:13:06.840
was also to be found

01:13:06.840 --> 01:13:08.840
and here you see that

01:13:08.840 --> 01:13:10.840
this global condition index was

01:13:10.840 --> 01:13:12.840
sampled over different

01:13:12.840 --> 01:13:14.840
values of rod lengths

01:13:14.840 --> 01:13:16.840
so here alpha

01:13:16.840 --> 01:13:18.840
and B

01:13:18.840 --> 01:13:20.840
A and B but B was bound to A

01:13:20.840 --> 01:13:22.840
for sure

01:13:22.840 --> 01:13:24.840
in total it was meant to

01:13:24.840 --> 01:13:26.840
be length one

01:13:26.880 --> 01:13:28.880
and the bases

01:13:28.880 --> 01:13:30.880
or the radii

01:13:30.880 --> 01:13:32.880
were even set to the same value

01:13:32.880 --> 01:13:34.880
and here is the step

01:13:34.880 --> 01:13:36.880
step width that they took

01:13:36.880 --> 01:13:38.880
and then you see here for each step

01:13:38.880 --> 01:13:40.880
you get a value and then you see

01:13:40.880 --> 01:13:42.880
that for a rod length for A

01:13:42.880 --> 01:13:44.880
somewhere around

01:13:44.880 --> 01:13:46.880
45 point

01:13:46.880 --> 01:13:48.880
45 let's say it's maybe

01:13:48.880 --> 01:13:50.880
in meters then it would be roughly

01:13:50.880 --> 01:13:52.880
half a meter then you would find

01:13:52.880 --> 01:13:54.880
the optimal

01:13:54.920 --> 01:13:56.920
global condition index

01:13:56.920 --> 01:13:58.920
and with that could determine

01:13:58.920 --> 01:14:00.920
the exact values are 0.46

01:14:00.920 --> 01:14:02.920
and 0.54

01:14:02.920 --> 01:14:04.920
for A and B

01:14:04.920 --> 01:14:06.920
so you can

01:14:06.920 --> 01:14:08.920
find a good solution

01:14:08.920 --> 01:14:10.920
for the workspace which would then

01:14:10.920 --> 01:14:12.920
look like this and they

01:14:12.920 --> 01:14:14.920
did a similar analysis to find

01:14:14.920 --> 01:14:16.920
this TCP

01:14:16.920 --> 01:14:18.920
and base radius

01:14:18.920 --> 01:14:20.920
as well

01:14:20.920 --> 01:14:22.920
so something we don't want to go

01:14:22.960 --> 01:14:24.960
into this

01:14:24.960 --> 01:14:26.960
or we don't want to go into depth with this

01:14:26.960 --> 01:14:28.960
it's just an example to make it more

01:14:28.960 --> 01:14:30.960
tangible how such a calculation

01:14:30.960 --> 01:14:32.960
might look like for sure this is

01:14:32.960 --> 01:14:34.960
a very particular example very specific

01:14:34.960 --> 01:14:36.960
example not necessarily what you need

01:14:36.960 --> 01:14:38.960
to learn by heart for the

01:14:38.960 --> 01:14:40.960
for the

01:14:40.960 --> 01:14:42.960
exam and for your later life the important

01:14:42.960 --> 01:14:44.960
thing is the methodology behind

01:14:44.960 --> 01:14:46.960
and how it roughly

01:14:46.960 --> 01:14:48.960
looks like let's say

01:14:48.960 --> 01:14:50.960
okay with that we get to

01:14:51.000 --> 01:14:53.000
this summary

01:14:53.000 --> 01:14:55.000
and I would like to ask you at first

01:14:55.000 --> 01:14:57.000
as usual what would you put on the

01:14:57.000 --> 01:14:59.000
last slide

01:15:05.000 --> 01:15:07.000
okay we have different type of mechanisms

01:15:07.000 --> 01:15:09.000
what do you mean

01:15:11.000 --> 01:15:13.000
serial parallel and hybrid

01:15:13.000 --> 01:15:15.000
kinematic chains and that depends on

01:15:15.000 --> 01:15:17.000
whether we have just the bases on which

01:15:17.000 --> 01:15:19.000
we are doing something or whether we do it

01:15:19.040 --> 01:15:21.040
between two bases or we connect something

01:15:21.040 --> 01:15:23.040
serial to it yes

01:15:23.040 --> 01:15:25.040
good what else

01:15:25.040 --> 01:15:27.040
different joins

01:15:27.040 --> 01:15:29.040
representations what do you mean with that

01:15:29.040 --> 01:15:31.040
how they look like in the picture

01:15:31.040 --> 01:15:33.040
okay

01:15:39.040 --> 01:15:41.040
let's say parameterization not notation

01:15:41.040 --> 01:15:43.040
so we could

01:15:43.040 --> 01:15:45.040
parameterize our kinematic

01:15:45.040 --> 01:15:47.040
mechanism with DH parameters

01:15:47.080 --> 01:15:49.080
or vector parameters

01:15:49.080 --> 01:15:51.080
two ways of

01:15:51.080 --> 01:15:53.080
parameterizing

01:15:53.080 --> 01:15:55.080
our

01:15:55.080 --> 01:15:57.080
manipulator great

01:15:57.080 --> 01:15:59.080
okay and we use them to do what

01:15:59.080 --> 01:16:01.080
you said the same

01:16:01.080 --> 01:16:03.080
kinematic analysis

01:16:03.080 --> 01:16:05.080
forward and inverse you said

01:16:05.080 --> 01:16:07.080
right so both right

01:16:07.080 --> 01:16:09.080
okay good

01:16:09.080 --> 01:16:11.080
forward would mean

01:16:11.080 --> 01:16:13.080
external coordinates as a function of internal

01:16:13.080 --> 01:16:15.080
and the

01:16:15.120 --> 01:16:17.120
internal as a function of internal

01:16:17.120 --> 01:16:19.120
internal as a function of external

01:16:19.120 --> 01:16:21.120
would be inverse

01:16:21.120 --> 01:16:23.120
usually the more complex one

01:16:23.120 --> 01:16:25.120
not always but usually

01:16:25.120 --> 01:16:27.120
okay what else

01:16:29.120 --> 01:16:31.120
we have talked about singularities

01:16:31.120 --> 01:16:33.120
so where our robot can

01:16:33.120 --> 01:16:35.120
either not move

01:16:35.120 --> 01:16:37.120
into at least one direction or

01:16:37.120 --> 01:16:39.120
not transfer forces and torques into one

01:16:39.120 --> 01:16:41.120
or the other direction something that we

01:16:41.120 --> 01:16:43.120
will see more deeply later on

01:16:43.160 --> 01:16:45.160
and then differential kinematics so there is

01:16:45.160 --> 01:16:47.160
the relation between the velocities

01:16:47.160 --> 01:16:49.160
on the input and output yeah

01:16:49.160 --> 01:16:51.160
so also for the upcoming weeks

01:16:51.160 --> 01:16:53.160
good to stay within time let me show me

01:16:53.160 --> 01:16:55.160
show you mine

01:16:55.160 --> 01:16:57.160
so complex joints can be modeled as

01:16:57.160 --> 01:16:59.160
combinations of simple rotational and

01:16:59.160 --> 01:17:01.160
translational joints that goes along with you

01:17:01.160 --> 01:17:03.160
what you added

01:17:03.160 --> 01:17:05.160
complex joints can be represented

01:17:05.160 --> 01:17:07.160
as links connected through

01:17:07.160 --> 01:17:09.160
sorry complex mechanisms

01:17:09.160 --> 01:17:11.160
can be represented as links connected through

01:17:11.200 --> 01:17:13.200
active or passive joints this is something that we

01:17:13.200 --> 01:17:15.200
actually didn't distinguish today

01:17:15.200 --> 01:17:17.200
but it was in already so if we go

01:17:17.200 --> 01:17:19.200
back to that picture here

01:17:19.200 --> 01:17:21.200
you see the

01:17:21.200 --> 01:17:23.200
filled joints are meant to be active

01:17:23.200 --> 01:17:25.200
the empty joints so not

01:17:25.200 --> 01:17:27.200
colored joints are meant to be passive

01:17:27.200 --> 01:17:29.200
so basically here you would have a

01:17:29.200 --> 01:17:31.200
motor in this one and that one and the rest is

01:17:31.200 --> 01:17:33.200
moving accordingly to what

01:17:33.200 --> 01:17:35.200
the two active ones are doing

01:17:35.200 --> 01:17:37.200
so this is something that I

01:17:37.200 --> 01:17:39.200
forgot mentioning

01:17:39.240 --> 01:17:41.240
mechanisms are composed of kinematic

01:17:41.240 --> 01:17:43.240
chains which can represent

01:17:43.240 --> 01:17:45.240
can be represented by

01:17:45.240 --> 01:17:47.240
a set of parameters representing the

01:17:47.240 --> 01:17:49.240
kinematic transformation from

01:17:49.240 --> 01:17:51.240
one coordinate system to the next

01:17:51.240 --> 01:17:53.240
the Hn vector

01:17:53.240 --> 01:17:55.240
forward kinematics we can do

01:17:55.240 --> 01:17:57.240
we often computed using

01:17:57.240 --> 01:17:59.240
consecutive

01:17:59.240 --> 01:18:01.240
spatial transformation so consecutive

01:18:01.240 --> 01:18:03.240
frame alignment

01:18:03.240 --> 01:18:05.240
useful particularly for

01:18:05.240 --> 01:18:07.240
theory mechanisms for hybrid and

01:18:07.280 --> 01:18:09.280
parallel we might do differently

01:18:09.280 --> 01:18:11.280
because no analytic solution might be

01:18:11.280 --> 01:18:13.280
there similarly

01:18:13.280 --> 01:18:15.280
inverse kinematics

01:18:15.280 --> 01:18:17.280
might not be possible analytically

01:18:17.280 --> 01:18:19.280
but there we have numerical

01:18:19.280 --> 01:18:21.280
approaches and finally

01:18:21.280 --> 01:18:23.280
we have seen that we

01:18:23.280 --> 01:18:25.280
might want to optimize our

01:18:25.280 --> 01:18:27.280
mechanism with respect to

01:18:27.280 --> 01:18:29.280
kinematic properties and they are

01:18:29.280 --> 01:18:31.280
aiming for high atrocity

01:18:31.280 --> 01:18:33.280
high force speed transmission

01:18:33.280 --> 01:18:35.280
and no singularities might be what

01:18:35.320 --> 01:18:37.320
we want but this is

01:18:37.320 --> 01:18:39.320
not always the case

01:18:39.320 --> 01:18:41.320
sometimes we talked about

01:18:41.320 --> 01:18:43.320
singularity coupling that we would not like

01:18:43.320 --> 01:18:45.320
to have that and in general

01:18:45.320 --> 01:18:47.320
singularities can also

01:18:47.320 --> 01:18:49.320
be avoided by control for example

01:18:49.320 --> 01:18:51.320
if we use pseudo inverse methods

01:18:51.320 --> 01:18:53.320
no matter which kind of

01:18:53.320 --> 01:18:55.320
but something that's related to the pseudo inverse

01:18:55.320 --> 01:18:57.320
and by the way the pseudo inverse

01:18:57.320 --> 01:18:59.320
is something that you might look up later on

01:18:59.320 --> 01:19:01.320
this is useful in many many

01:19:01.320 --> 01:19:03.320
branches of science as you see

01:19:03.360 --> 01:19:05.360
and we have seen that

01:19:05.360 --> 01:19:07.760
the

01:19:07.760 --> 01:19:09.760
like holes and robots are not too close to each other

01:19:09.760 --> 01:19:11.760
they are even more

01:19:11.760 --> 01:19:13.760
and so it's definitely worth

01:19:13.760 --> 01:19:15.760
taking a look into this very fundamental

01:19:15.760 --> 01:19:17.760
mathematical method

01:19:17.760 --> 01:19:19.760
okay any questions on your side

01:19:19.760 --> 01:19:21.760
for today

01:19:21.760 --> 01:19:23.760
no

01:19:23.760 --> 01:19:25.760
okay then we

01:19:25.760 --> 01:19:27.760
go on next week with the next

01:19:27.760 --> 01:19:29.760
lecture so we are basically having

01:19:29.760 --> 01:19:31.760
three lectures in a row more or less

01:19:32.200 --> 01:19:34.200
so next week we will go deeper then we have the

01:19:34.200 --> 01:19:36.200
MDP concept presentations and then we have

01:19:36.200 --> 01:19:38.200
another one and after that we

01:19:38.200 --> 01:19:40.200
go into another

01:19:40.200 --> 01:19:42.200
direction more in the interface

01:19:42.200 --> 01:19:44.200
direction but the next three

01:19:44.200 --> 01:19:46.200
lecture or next two lectures

01:19:46.200 --> 01:19:48.200
plus this one will be super deep into the kinematics

01:19:48.200 --> 01:19:50.200
part so stay tuned

01:19:50.200 --> 01:19:52.200
for the next step

01:19:52.200 --> 01:19:54.200
we can talk afterwards maybe because I think

01:19:54.200 --> 01:19:56.200
the others want to be or is it

01:19:56.200 --> 01:19:58.200
no no the question is

01:19:58.200 --> 01:20:00.200
you can't

01:20:00.640 --> 01:20:02.640
we usually do but maybe

01:20:02.640 --> 01:20:04.640
the team assistant

01:20:04.640 --> 01:20:06.640
the research assistant forgot

01:20:06.640 --> 01:20:08.640
and then I need to remind them for sure

01:20:08.640 --> 01:20:10.640
yeah

01:20:10.640 --> 01:20:12.640
we always put them online but sometimes

01:20:12.640 --> 01:20:14.640
so we always try

01:20:14.640 --> 01:20:16.640
to do it and sometimes they

01:20:16.640 --> 01:20:18.640
forget and then I need to tell them yeah

01:20:18.640 --> 01:20:20.640
okay thank you for mentioning good

01:20:20.640 --> 01:20:22.640
have a nice day see you next week bye bye

01:20:22.640 --> 01:20:24.640
it will definitely

01:20:24.640 --> 01:20:26.640
be uploaded afterwards with the

01:20:26.640 --> 01:20:28.640
solution of the in class exercise

01:20:29.080 --> 01:20:31.080
but our plan is to have it available

01:20:31.080 --> 01:20:33.080
before


